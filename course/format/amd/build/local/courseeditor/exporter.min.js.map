{"version":3,"file":"exporter.min.js","sources":["../../../src/local/courseeditor/exporter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to export parts of the state and transform them to be used in templates\n * and as draggable data.\n *\n * @module     core_courseformat/local/courseeditor/exporter\n * @class      core_courseformat/local/courseeditor/exporter\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport default class {\n\n    /**\n     * Class constructor.\n     *\n     * @param {CourseEditor} reactive the course editor object\n     */\n    constructor(reactive) {\n        this.reactive = reactive;\n\n        // Completions states are defined in lib/completionlib.php. There are 4 different completion\n        // state values, however, the course index uses the same state for complete and complete_pass.\n        // This is the reason why completed appears twice in the array.\n        this.COMPLETIONS = ['incomplete', 'complete', 'complete', 'fail'];\n    }\n\n    /**\n     * Generate the course export data from the state.\n     *\n     * @param {Object} state the current state.\n     * @returns {Object}\n     */\n    course(state) {\n        // Collect section information from the state.\n        const data = {\n            sections: [],\n            editmode: this.reactive.isEditing,\n            highlighted: state.course.highlighted ?? '',\n        };\n        const sectionlist = state.course.sectionlist ?? [];\n        sectionlist.forEach(sectionid => {\n            const sectioninfo = state.section.get(sectionid) ?? {};\n            const section = this.section(state, sectioninfo);\n            data.sections.push(section);\n        });\n        data.hassections = (data.sections.length != 0);\n\n        return data;\n    }\n\n    /**\n     * Generate a section export data from the state.\n     *\n     * @param {Object} state the current state.\n     * @param {Object} sectioninfo the section state data.\n     * @returns {Object}\n     */\n    section(state, sectioninfo) {\n        const section = {\n            ...sectioninfo,\n            highlighted: state.course.highlighted ?? '',\n            cms: [],\n        };\n        const cmlist = sectioninfo.cmlist ?? [];\n        cmlist.forEach(cmid => {\n            const cminfo = state.cm.get(cmid);\n            const cm = this.cm(state, cminfo);\n            section.cms.push(cm);\n        });\n        section.hascms = (section.cms.length != 0);\n\n        return section;\n    }\n\n    /**\n     * Generate a cm export data from the state.\n     *\n     * @param {Object} state the current state.\n     * @param {Object} cminfo the course module state data.\n     * @returns {Object}\n     */\n    cm(state, cminfo) {\n        const cm = {\n            ...cminfo,\n            isactive: false,\n        };\n        return cm;\n    }\n\n    /**\n     * Generate a dragable cm data structure.\n     *\n     * This method is used by any draggable course module element to generate drop data\n     * for its reactive/dragdrop instance.\n     *\n     * @param {*} state the state object\n     * @param {*} cmid the cours emodule id\n     * @returns {Object|null}\n     */\n    cmDraggableData(state, cmid) {\n        const cminfo = state.cm.get(cmid);\n        if (!cminfo) {\n            return null;\n        }\n\n        // Drop an activity over the next activity is the same as doing anything.\n        let nextcmid;\n        const section = state.section.get(cminfo.sectionid);\n        const currentindex = section?.cmlist.indexOf(cminfo.id);\n        if (currentindex !== undefined) {\n            nextcmid = section?.cmlist[currentindex + 1];\n        }\n\n        return {\n            type: 'cm',\n            id: cminfo.id,\n            name: cminfo.name,\n            sectionid: cminfo.sectionid,\n            nextcmid,\n        };\n    }\n\n    /**\n     * Generate a dragable cm data structure.\n     *\n     * This method is used by any draggable section element to generate drop data\n     * for its reactive/dragdrop instance.\n     *\n     * @param {*} state the state object\n     * @param {*} sectionid the cours section id\n     * @returns {Object|null}\n     */\n    sectionDraggableData(state, sectionid) {\n        const sectioninfo = state.section.get(sectionid);\n        if (!sectioninfo) {\n            return null;\n        }\n        return {\n            type: 'section',\n            id: sectioninfo.id,\n            name: sectioninfo.name,\n            number: sectioninfo.number,\n        };\n    }\n\n    /**\n     * Generate a file draggable structure.\n     *\n     * This method is used when files are dragged on the browser.\n     *\n     * @param {*} state the state object\n     * @param {*} dataTransfer the current data tranfer data\n     * @returns {Object|null}\n     */\n    fileDraggableData(state, dataTransfer) {\n        const files = [];\n        // Browsers do not provide the file list until the drop event.\n        if (dataTransfer.files?.length > 0) {\n            dataTransfer.files.forEach(file => {\n                files.push(file);\n            });\n        }\n        return {\n            type: 'files',\n            files,\n        };\n    }\n\n    /**\n     * Generate a completion export data from the cm element.\n     *\n     * @param {Object} state the current state.\n     * @param {Object} cminfo the course module state data.\n     * @returns {Object}\n     */\n    cmCompletion(state, cminfo) {\n        const data = {\n            statename: '',\n            state: 'NaN',\n        };\n        if (cminfo.completionstate !== undefined) {\n            data.state = cminfo.completionstate;\n            data.hasstate = true;\n            const statename = this.COMPLETIONS[cminfo.completionstate] ?? 'NaN';\n            data[`is${statename}`] = true;\n        }\n        return data;\n    }\n\n    /**\n     * Return a sorted list of all sections and cms items in the state.\n     *\n     * @param {Object} state the current state.\n     * @returns {Array} all sections and cms items in the state.\n     */\n    allItemsArray(state) {\n        const items = [];\n        const sectionlist = state.course.sectionlist ?? [];\n        // Add sections.\n        sectionlist.forEach(sectionid => {\n            const sectioninfo = state.section.get(sectionid);\n            items.push({type: 'section', id: sectioninfo.id, url: sectioninfo.sectionurl});\n            // Add cms.\n            const cmlist = sectioninfo.cmlist ?? [];\n            cmlist.forEach(cmid => {\n                const cminfo = state.cm.get(cmid);\n                items.push({type: 'cm', id: cminfo.id, url: cminfo.url});\n            });\n        });\n        return items;\n    }\n\n    /**\n     * Check is some activities of a list can be stealth.\n     *\n     * @param {Object} state the current state.\n     * @param {Number[]} cmIds the module ids to check\n     * @returns {Boolean} if any of the activities can be stealth.\n     */\n    canUseStealth(state, cmIds) {\n        return cmIds.some(cmId => {\n            const cminfo = state.cm.get(cmId);\n            return cminfo?.allowstealth ?? false;\n        });\n    }\n}\n"],"names":["_exports","default","constructor","reactive","this","COMPLETIONS","course","state","data","sections","editmode","isEditing","highlighted","sectionlist","forEach","sectionid","sectioninfo","section","get","push","hassections","length","cms","cmlist","cmid","cminfo","cm","hascms","isactive","cmDraggableData","nextcmid","currentindex","indexOf","id","undefined","type","name","sectionDraggableData","number","fileDraggableData","dataTransfer","_dataTransfer$files","files","file","cmCompletion","statename","completionstate","hasstate","allItemsArray","items","url","sectionurl","canUseStealth","cmIds","some","cmId","allowstealth"],"mappings":"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"}