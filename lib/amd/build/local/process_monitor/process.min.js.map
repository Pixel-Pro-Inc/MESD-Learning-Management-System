{"version":3,"file":"process.min.js","sources":["../../../src/local/process_monitor/process.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * The process motnitor's process reactive component.\n *\n * @module     core/local/process_monitor/process\n * @class      core/local/process_monitor/process\n * @copyright  2022 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {manager} from 'core/local/process_monitor/manager';\n\nexport default class extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'process_monitor_process';\n        // Default query selectors.\n        this.selectors = {\n            CLOSE: `[data-action=\"closeProcess\"]`,\n            ERROR: `[data-for=\"error\"]`,\n            PROGRESSBAR: `progress`,\n            NAME: `[data-for=\"name\"]`,\n        };\n        // Default classes to toggle on refresh.\n        this.classes = {\n            HIDE: `d-none`,\n        };\n        this.id = this.element.dataset.id;\n    }\n\n    /**\n     * Static method to create a component instance form the mustache template.\n     *\n     * @param {string} query the DOM main element query selector\n     * @param {object} selectors optional css selector overrides\n     * @return {this}\n     */\n    static init(query, selectors) {\n        return new this({\n            element: document.querySelector(query),\n            reactive: manager,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the initial state\n     */\n    stateReady(state) {\n        this._refreshItem({state, element: state.queue.get(this.id)});\n        this.addEventListener(this.getElement(this.selectors.CLOSE), 'click', this._removeProcess);\n    }\n\n    /**\n     * Return the component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `queue[${this.id}]:updated`, handler: this._refreshItem},\n            {watch: `queue[${this.id}]:deleted`, handler: this.remove},\n        ];\n    }\n\n    /**\n     * Create a monitor item.\n     *\n     * @param {object} args the watcher arguments\n     * @param {object} args.element the item state data\n     */\n    async _refreshItem({element}) {\n        const name = this.getElement(this.selectors.NAME);\n        name.innerHTML = element.name;\n\n        const progressbar = this.getElement(this.selectors.PROGRESSBAR);\n        progressbar.classList.toggle(this.classes.HIDE, element.finished);\n        progressbar.value = element.percentage;\n\n        const close = this.getElement(this.selectors.CLOSE);\n        close.classList.toggle(this.classes.HIDE, !element.error);\n\n        const error = this.getElement(this.selectors.ERROR);\n        error.innerHTML = element.error;\n        error.classList.toggle(this.classes.HIDE, !element.error);\n    }\n\n    /**\n     * Close the process.\n     */\n    _removeProcess() {\n        this.reactive.dispatch('removeProcess', this.id);\n    }\n}\n"],"names":["_default","BaseComponent","create","this","name","selectors","CLOSE","ERROR","PROGRESSBAR","NAME","classes","HIDE","id","element","dataset","init","query","document","querySelector","reactive","manager","stateReady","state","_refreshItem","queue","get","addEventListener","getElement","_removeProcess","getWatchers","watch","handler","remove","_ref","innerHTML","progressbar","classList","toggle","finished","value","percentage","error","dispatch","_exports","default"],"mappings":";;;;;;;;;AA2Be,MAAAA,iBAAcC,UAAAA,cAKzBC,MAAAA,GAEIC,KAAKC,KAAO,0BAEZD,KAAKE,UAAY,CACbC,MAAQ,+BACRC,MAAQ,qBACRC,YAAc,WACdC,KAAO,qBAGXN,KAAKO,QAAU,CACXC,KAAO,UAEXR,KAAKS,GAAKT,KAAKU,QAAQC,QAAQF,EACnC,CASA,WAAOG,CAAKC,MAAOX,WACf,OAAO,IAAIF,KAAK,CACZU,QAASI,SAASC,cAAcF,OAChCG,SAAUC,SAAOA,QACjBf,qBAER,CAOAgB,UAAAA,CAAWC,OACPnB,KAAKoB,aAAa,CAACD,YAAOT,QAASS,MAAME,MAAMC,IAAItB,KAAKS,MACxDT,KAAKuB,iBAAiBvB,KAAKwB,WAAWxB,KAAKE,UAAUC,OAAQ,QAASH,KAAKyB,eAC/E,CAOAC,WAAAA,GACI,MAAO,CACH,CAACC,MAAQ,SAAQ3B,KAAKS,cAAemB,QAAS5B,KAAKoB,cACnD,CAACO,MAAQ,SAAQ3B,KAAKS,cAAemB,QAAS5B,KAAK6B,QAE3D,CAQA,kBAAMT,CAAYU,MAAY,IAAXpB,QAACA,SAAQoB,KACX9B,KAAKwB,WAAWxB,KAAKE,UAAUI,MACvCyB,UAAYrB,QAAQT,KAEzB,MAAM+B,YAAchC,KAAKwB,WAAWxB,KAAKE,UAAUG,aACnD2B,YAAYC,UAAUC,OAAOlC,KAAKO,QAAQC,KAAME,QAAQyB,UACxDH,YAAYI,MAAQ1B,QAAQ2B,WAEdrC,KAAKwB,WAAWxB,KAAKE,UAAUC,OACvC8B,UAAUC,OAAOlC,KAAKO,QAAQC,MAAOE,QAAQ4B,OAEnD,MAAMA,MAAQtC,KAAKwB,WAAWxB,KAAKE,UAAUE,OAC7CkC,MAAMP,UAAYrB,QAAQ4B,MAC1BA,MAAML,UAAUC,OAAOlC,KAAKO,QAAQC,MAAOE,QAAQ4B,MACvD,CAKAb,cAAAA,GACIzB,KAAKgB,SAASuB,SAAS,gBAAiBvC,KAAKS,GACjD,EACH,OAAA+B,SAAAC,QAAA5C,SAAA2C,SAAAC,OAAA"}