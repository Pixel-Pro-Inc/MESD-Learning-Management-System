{"version":3,"file":"modal_factory.min.js","sources":["../src/modal_factory.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Create a modal.\n *\n * @module     core/modal_factory\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @deprecated since Moodle 4.3\n * @todo       Final deprecation in Moodle 4.7/5.2. See MDL-79128/\n */\n\nimport $ from 'jquery';\nimport ModalEvents from 'core/modal_events';\nimport * as ModalRegistry from 'core/modal_registry';\nimport Modal from 'core/modal';\nimport ModalSaveCancel from 'core/modal_save_cancel';\nimport ModalDeleteCancel from 'core/modal_delete_cancel';\nimport ModalCancel from 'core/modal_cancel';\nimport ModalAlert from 'core/local/modal/alert';\nimport * as Notification from 'core/notification';\nimport * as CustomEvents from 'core/custom_interaction_events';\nimport Pending from 'core/pending';\n\n/**\n * The available standard modals.\n *\n * @property {String} DEFAULT The default modal\n * @property {String} SAVE_CANCEL A modal which can be used to either save, or cancel.\n * @property {String} DELETE_CANCEL A modal which can be used to either delete, or cancel.\n * @property {String} CANCEL A modal which displayed a cancel button\n * @property {String} ALERT An information modal which only displays information.\n */\nexport const types = {\n    DEFAULT: 'DEFAULT',\n    SAVE_CANCEL: ModalSaveCancel.TYPE,\n    DELETE_CANCEL: ModalDeleteCancel.TYPE,\n    CANCEL: ModalCancel.TYPE,\n    ALERT: ModalAlert.TYPE,\n};\n\n// Most modals are self-registering.\n// We do not self-register the base Modal because we do not want to define a default TYPE\n// on the class that every other modal extends.\nModalRegistry.register(types.DEFAULT, Modal, Modal.TEMPLATE);\n\n/**\n * Set up the events required to show the modal and return focus when the modal\n * is closed.\n *\n * @method setUpTrigger\n * @private\n * @param {Promise} modalPromise The modal instance\n * @param {object} triggerElement The jQuery element to open the modal\n * @param {object} modalConfig The modal configuration given to the factory\n */\nconst setUpTrigger = (modalPromise, triggerElement, modalConfig) => {\n    // The element that actually shows the modal.\n    let actualTriggerElement = null;\n    // Check if the client has provided a callback function to be called\n    // before the modal is displayed.\n    const hasPreShowCallback = (typeof modalConfig.preShowCallback == 'function');\n    // Function to handle the trigger element being activated.\n    const triggeredCallback = (e, data) => {\n        const pendingPromise = new Pending('core/modal_factory:setUpTrigger:triggeredCallback');\n        actualTriggerElement = $(e.currentTarget);\n\n        // eslint-disable-next-line promise/catch-or-return\n        modalPromise.then(function(modal) {\n            if (hasPreShowCallback) {\n                // If the client provided a pre-show callback then execute\n                // it now before showing the modal.\n                modalConfig.preShowCallback(actualTriggerElement, modal);\n            }\n\n            modal.show();\n\n            return modal;\n        })\n        .then(pendingPromise.resolve);\n        data.originalEvent.preventDefault();\n    };\n\n    // The trigger element can either be a single element or it can be an\n    // element + selector pair to create a delegated event handler to trigger\n    // the modal.\n    if (Array.isArray(triggerElement)) {\n        const selector = triggerElement[1];\n        triggerElement = triggerElement[0];\n\n        CustomEvents.define(triggerElement, [CustomEvents.events.activate]);\n        triggerElement.on(CustomEvents.events.activate, selector, triggeredCallback);\n    } else {\n        CustomEvents.define(triggerElement, [CustomEvents.events.activate]);\n        triggerElement.on(CustomEvents.events.activate, triggeredCallback);\n    }\n\n    // eslint-disable-next-line promise/catch-or-return\n    modalPromise.then(function(modal) {\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Focus on the trigger element that actually launched the modal.\n            if (actualTriggerElement !== null) {\n                actualTriggerElement.focus();\n            }\n        });\n\n        return modal;\n    });\n};\n\n/**\n * Create a Modal instance.\n *\n * @method create\n * @param {object} modalConfig The configuration to create the modal instance\n * @param {object} triggerElement The trigger HTML jQuery object\n * @return {promise} Resolved with a Modal instance\n */\nexport const create = (modalConfig, triggerElement) => {\n    window.console.warn(\n        'The modal_factory has been deprecated since Moodle 4.3. Please use the create method on your target modal type instead.',\n    );\n    // Use of the triggerElement has been deprecated.\n    const type = modalConfig.type || types.DEFAULT;\n\n    const registryConf = ModalRegistry.get(type);\n    if (!registryConf) {\n        Notification.exception({message: `Unable to find modal of type: ${type}`});\n    }\n\n    const modal = registryConf.module.create(modalConfig);\n\n    if (triggerElement) {\n        window.console.warn(\n            'The triggerElement feature of the modal_factory has been deprecated. Please use event listeners instead.',\n        );\n        setUpTrigger(modal, triggerElement, modalConfig);\n    }\n\n    return $.when(new Promise((resolve, reject) => {\n        modal\n            .then(resolve)\n            .catch(reject);\n    }));\n};\n\nexport default {\n    create,\n    types,\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireDefault","obj","_jquery","_modal_events","ModalRegistry","_modal","_modal_save_cancel","_modal_delete_cancel","_modal_cancel","_alert","Notification","CustomEvents","_pending","types","_exports","DEFAULT","SAVE_CANCEL","ModalSaveCancel","TYPE","DELETE_CANCEL","ModalDeleteCancel","CANCEL","ModalCancel","ALERT","ModalAlert","register","Modal","TEMPLATE","create","modalConfig","triggerElement","window","console","warn","type","registryConf","exception","message","modal","module","setUpTrigger","modalPromise","actualTriggerElement","hasPreShowCallback","preShowCallback","triggeredCallback","data","pendingPromise","Pending","$","currentTarget","then","show","resolve","originalEvent","preventDefault","Array","isArray","selector","define","events","activate","on","getRoot","ModalEvents","hidden","focus","when","Promise","reject","catch"],"mappings":"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"}