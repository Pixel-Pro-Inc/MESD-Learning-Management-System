{"version":3,"file":"drawer.min.js","sources":["../src/drawer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the drawer.\n *\n * @module     core/drawer\n * @copyright  2019 Jun Pataleta <jun@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport * as PubSub from 'core/pubsub';\nimport * as Aria from 'core/aria';\nimport DrawerEvents from 'core/drawer_events';\n\n/**\n * Show the drawer.\n *\n * @param {Object} root The drawer container.\n */\nconst show = root => {\n    // Ensure that it is a jQuery.\n    root = $(root);\n\n    Aria.unhide(root.get());\n    root.removeClass('hidden');\n    root.attr('aria-expanded', true);\n    root.focus();\n\n    PubSub.publish(DrawerEvents.DRAWER_SHOWN, root);\n};\n\n/**\n * Hide the drawer.\n *\n * @param {Object} root The drawer container.\n */\nconst hide = root => {\n    // Ensure that it is a jQuery.\n    root = $(root);\n\n    root.addClass('hidden');\n    root.attr('aria-expanded', false);\n    Aria.hide(root.get());\n\n    PubSub.publish(DrawerEvents.DRAWER_HIDDEN, root);\n};\n\n/**\n * Check if the drawer is visible.\n *\n * @param {Object} root The drawer container.\n * @return {boolean}\n */\nconst isVisible = (root) => {\n    let isHidden = root.hasClass('hidden');\n    return !isHidden;\n};\n\n/**\n * Toggle the drawer visibility.\n *\n * @param {Object} root The drawer container.\n */\nconst toggle = (root) => {\n    if (isVisible(root)) {\n        hide(root);\n    } else {\n        show(root);\n    }\n};\n\n/**\n * Add event listeners to toggle the drawer.\n *\n * @param {Object} root The drawer container.\n * @param {Object} toggleElements The toggle elements.\n */\nconst registerToggles = (root, toggleElements) => {\n    let openTrigger = null;\n    toggleElements.attr('aria-expanded', isVisible(root));\n\n    toggleElements.on('click', (e) => {\n        e.preventDefault();\n        const wasVisible = isVisible(root);\n        toggle(root);\n        toggleElements.attr('aria-expanded', !wasVisible);\n\n        if (!wasVisible) {\n            // Remember which trigger element opened the drawer.\n            openTrigger = toggleElements.filter((index, element) => {\n                return element == e.target || element.contains(e.target);\n            });\n        } else if (openTrigger) {\n            // The drawer has gone from open to close so we need to set the focus back\n            // to the element that openend it.\n            openTrigger.focus();\n            openTrigger = null;\n        }\n    });\n};\n\n/**\n * Find the root element of the drawer based on the using the drawer content root's ID.\n *\n * @param {Object} contentRoot The drawer content's root element.\n * @returns {*|jQuery}\n */\nconst getDrawerRoot = (contentRoot) => {\n    contentRoot = $(contentRoot);\n    return contentRoot.closest('[data-region=\"right-hand-drawer\"]');\n};\n\nexport default {\n    hide: hide,\n    show: show,\n    isVisible: isVisible,\n    toggle: toggle,\n    registerToggles: registerToggles,\n    getDrawerRoot: getDrawerRoot\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireDefault","obj","_jquery","PubSub","Aria","_drawer_events","show","root","$","unhide","removeClass","attr","focus","publish","DrawerEvents","DRAWER_SHOWN","hide","addClass","DRAWER_HIDDEN","isVisible","hasClass","toggle","_exports","registerToggles","toggleElements","openTrigger","on","preventDefault","wasVisible","filter","index","element","target","contains","getDrawerRoot","contentRoot","closest"],"mappings":"gJAyB8C,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,wBAAAJ,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAK,kBAAAL,EAAA,GAAA,OAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,MAAA,CAAAM,QAAAN,GAAA,IAAAG,EAAAJ,yBAAAG,GAAAC,GAAAA,GAAAA,EAAAI,IAAAP,GAAAG,OAAAA,EAAAK,IAAAR,GAAAS,IAAAA,GAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAf,EAAA,GAAA,YAAAe,GAAAH,OAAAI,UAAAC,eAAAC,KAAAlB,EAAAe,GAAAI,CAAAA,IAAAA,EAAAR,EAAAC,OAAAE,yBAAAd,EAAAe,GAAA,KAAAI,IAAAA,EAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAf,EAAAe,EAAA,CAAA,OAAAN,EAAAH,QAAAN,EAAAG,GAAAA,EAAAiB,IAAApB,EAAAS,GAAAA,CAAA,CAAA,SAAAY,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAjB,WAAAiB,IAAAhB,CAAAA,QAAAgB,IAAA;;;;;;;qFAH9CC,QAAAF,uBAAAE,SACAC,OAAApB,wBAAAoB,QACAC,KAAArB,wBAAAqB,MACAC,eAAAL,uBAAAK,gBAOA,MAAMC,KAAOC,OAETA,MAAO,EAAAC,QAACvB,SAACsB,MAETH,KAAKK,OAAOF,KAAKpB,OACjBoB,KAAKG,YAAY,UACjBH,KAAKI,KAAK,iBAAiB,GAC3BJ,KAAKK,QAELT,OAAOU,QAAQC,eAAAA,QAAaC,aAAcR,KAAK,EAQ7CS,KAAOT,QAETA,MAAO,EAAAC,QAACvB,SAACsB,OAEJU,SAAS,UACdV,KAAKI,KAAK,iBAAiB,GAC3BP,KAAKY,KAAKT,KAAKpB,OAEfgB,OAAOU,QAAQC,eAAAA,QAAaI,cAAeX,KAAK,EAS9CY,UAAaZ,OACAA,KAAKa,SAAS,UAS3BC,OAAUd,OACRY,UAAUZ,MACVS,KAAKT,MAELD,KAAKC,KACT,EA0CFe,SAAArC,QAEa,CACX+B,KAAMA,KACNV,KAAMA,KACNa,UAAWA,UACXE,OAAQA,OACRE,gBAxCoBA,CAAChB,KAAMiB,kBAC3B,IAAIC,YAAc,KAClBD,eAAeb,KAAK,gBAAiBQ,UAAUZ,OAE/CiB,eAAeE,GAAG,SAAU/C,IACxBA,EAAEgD,iBACF,MAAMC,WAAaT,UAAUZ,MAC7Bc,OAAOd,MACPiB,eAAeb,KAAK,iBAAkBiB,YAEjCA,WAKMH,cAGPA,YAAYb,QACZa,YAAc,MAPdA,YAAcD,eAAeK,QAAO,CAACC,MAAOC,UACjCA,SAAWpD,EAAEqD,QAAUD,QAAQE,SAAStD,EAAEqD,SAOzD,GACF,EAoBFE,cAXmBC,cACnBA,aAAc,EAAA3B,QAACvB,SAACkD,cACGC,QAAQ,sCAU9B,OAAAd,SAAArC,OAAA"}