{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media plugin Embed class for Moodle.\n *\n * @module      tiny_media/embed\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {\n    getString,\n    getStrings,\n} from 'core/str';\nimport * as ModalEvents from 'core/modal_events';\nimport {displayFilepicker} from 'editor_tiny/utils';\nimport {getCurrentLanguage, getMoodleLang} from 'editor_tiny/options';\nimport {component} from \"./common\";\nimport EmbedModal from './embedmodal';\nimport Selectors from './selectors';\nimport {getEmbedPermissions} from './options';\nimport {getFilePicker} from 'editor_tiny/options';\n\nexport default class MediaEmbed {\n    editor = null;\n    canShowFilePicker = false;\n    canShowFilePickerPoster = false;\n    canShowFilePickerTrack = false;\n\n    /**\n     * @property {Object} The names of the alignment options.\n     */\n    helpStrings = null;\n\n    /**\n     * @property {boolean} Indicate that the user is updating the media or not.\n     */\n    isUpdating = false;\n\n    /**\n     * @property {Object} The currently selected media.\n     */\n    selectedMedia = null;\n\n    constructor(editor) {\n        const permissions = getEmbedPermissions(editor);\n\n        // Indicates whether the file picker can be shown.\n        this.canShowFilePicker = permissions.filepicker && (typeof getFilePicker(editor, 'media') !== 'undefined');\n        this.canShowFilePickerPoster = permissions.filepicker && (typeof getFilePicker(editor, 'image') !== 'undefined');\n        this.canShowFilePickerTrack = permissions.filepicker && (typeof getFilePicker(editor, 'subtitle') !== 'undefined');\n\n        this.editor = editor;\n    }\n\n    async getHelpStrings() {\n        if (!this.helpStrings) {\n            const [addSource, tracks, subtitles, captions, descriptions, chapters, metadata] = await getStrings([\n                'addsource_help',\n                'tracks_help',\n                'subtitles_help',\n                'captions_help',\n                'descriptions_help',\n                'chapters_help',\n                'metadata_help',\n            ].map((key) => ({\n                key,\n                component,\n            })));\n\n            this.helpStrings = {addSource, tracks, subtitles, captions, descriptions, chapters, metadata};\n        }\n\n        return this.helpStrings;\n    }\n\n    async getTemplateContext(data) {\n        const languages = this.prepareMoodleLang();\n\n        const helpIcons = Array.from(Object.entries(await this.getHelpStrings())).forEach(([key, text]) => {\n            data[`${key.toLowerCase()}helpicon`] = {text};\n        });\n\n        return Object.assign({}, {\n            elementid: this.editor.getElement().id,\n            showfilepicker: this.canShowFilePicker,\n            showfilepickerposter: this.canShowFilePickerPoster,\n            showfilepickertrack: this.canShowFilePickerTrack,\n            langsinstalled: languages.installed,\n            langsavailable: languages.available,\n            link: true,\n            video: false,\n            audio: false,\n            isupdating: this.isUpdating,\n        }, data, helpIcons);\n    }\n\n    async displayDialogue() {\n        this.selectedMedia = this.getSelectedMedia();\n        const data = Object.assign({}, this.getCurrentEmbedData());\n        this.isUpdating = Object.keys(data).length !== 0;\n\n        this.currentModal = await EmbedModal.create({\n            title: getString('createmedia', 'tiny_media'),\n            templateContext: await this.getTemplateContext(data),\n        });\n\n        await this.registerEventListeners(this.currentModal);\n    }\n\n    getCurrentEmbedData() {\n        const properties = this.getMediumProperties();\n        if (!properties) {\n            return {};\n        }\n\n        const processedProperties = {};\n        processedProperties[properties.type.toLowerCase()] = properties;\n        processedProperties.link = false;\n\n        return processedProperties;\n    }\n\n    getSelectedMedia() {\n        const mediaElm = this.editor.selection.getNode();\n\n        if (!mediaElm) {\n            return null;\n        }\n\n        if (mediaElm.nodeName.toLowerCase() === 'video' || mediaElm.nodeName.toLowerCase() === 'audio') {\n            return mediaElm;\n        }\n\n        if (mediaElm.querySelector('video')) {\n            return mediaElm.querySelector('video');\n        }\n\n        if (mediaElm.querySelector('audio')) {\n            return mediaElm.querySelector('audio');\n        }\n\n        return null;\n    }\n\n    getMediumProperties() {\n        const boolAttr = (elem, attr) => {\n            // As explained in MDL-64175, some OS (like Ubuntu), are removing the value for these attributes.\n            // So in order to check if attr=\"true\", we need to check if the attribute exists and if the value is empty or true.\n            return (elem.hasAttribute(attr) && (elem.getAttribute(attr) || elem.getAttribute(attr) === ''));\n        };\n\n        const tracks = {\n            subtitles: [],\n            captions: [],\n            descriptions: [],\n            chapters: [],\n            metadata: []\n        };\n        const sources = [];\n\n        const medium = this.selectedMedia;\n        if (!medium) {\n            return null;\n        }\n        medium.querySelectorAll('track').forEach((track) => {\n            tracks[track.getAttribute('kind')].push({\n                src: track.getAttribute('src'),\n                srclang: track.getAttribute('srclang'),\n                label: track.getAttribute('label'),\n                defaultTrack: boolAttr(track, 'default')\n            });\n        });\n\n        medium.querySelectorAll('source').forEach((source) => {\n            sources.push(source.src);\n        });\n\n        return {\n            type: medium.nodeName.toLowerCase() === 'video' ? Selectors.EMBED.mediaTypes.video : Selectors.EMBED.mediaTypes.audio,\n            sources,\n            poster: medium.getAttribute('poster'),\n            title: medium.getAttribute('title'),\n            width: medium.getAttribute('width'),\n            height: medium.getAttribute('height'),\n            autoplay: boolAttr(medium, 'autoplay'),\n            loop: boolAttr(medium, 'loop'),\n            muted: boolAttr(medium, 'muted'),\n            controls: boolAttr(medium, 'controls'),\n            tracks,\n        };\n    }\n\n    prepareMoodleLang() {\n        const moodleLangs = getMoodleLang(this.editor);\n        const currentLanguage = getCurrentLanguage(this.editor);\n\n        const installed = Object.entries(moodleLangs.installed).map(([lang, code]) => ({\n            lang,\n            code,\n            \"default\": lang === currentLanguage,\n        }));\n\n        const available = Object.entries(moodleLangs.available).map(([lang, code]) => ({\n            lang,\n            code,\n            \"default\": lang === currentLanguage,\n        }));\n\n        return {\n            installed,\n            available,\n        };\n    }\n\n    getMoodleLangObj(subtitleLang) {\n        const {available} = getMoodleLang(this.editor);\n\n        if (available[subtitleLang]) {\n            return {\n                lang: subtitleLang,\n                code: available[subtitleLang],\n            };\n        }\n\n        return null;\n    }\n\n    filePickerCallback(params, element, fpType) {\n        if (params.url !== '') {\n            const tabPane = element.closest('.tab-pane');\n            element.closest(Selectors.EMBED.elements.source).querySelector(Selectors.EMBED.elements.url).value = params.url;\n\n            if (tabPane.id === this.editor.getElement().id + '_' + Selectors.EMBED.mediaTypes.link.toLowerCase()) {\n                tabPane.querySelector(Selectors.EMBED.elements.name).value = params.file;\n            }\n\n            if (fpType === 'subtitle') {\n                // If the file is subtitle file. We need to match the language and label for that file.\n                const subtitleLang = params.file.split('.vtt')[0].split('-').slice(-1)[0];\n                const langObj = this.getMoodleLangObj(subtitleLang);\n                if (langObj) {\n                    const track = element.closest(Selectors.EMBED.elements.track);\n                    track.querySelector(Selectors.EMBED.elements.trackLabel).value = langObj.lang.trim();\n                    track.querySelector(Selectors.EMBED.elements.trackLang).value = langObj.code;\n                }\n            }\n        }\n    }\n\n    addMediaSourceComponent(element, callback) {\n        const sourceElement = element.closest(Selectors.EMBED.elements.source + Selectors.EMBED.elements.mediaSource);\n        const clone = sourceElement.cloneNode(true);\n\n        sourceElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\n        sourceElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\n\n        sourceElement.parentNode.insertBefore(clone, sourceElement.nextSibling);\n\n        if (callback) {\n            callback(clone);\n        }\n    }\n\n    removeMediaSourceComponent(element) {\n        const sourceElement = element.closest(Selectors.EMBED.elements.source + Selectors.EMBED.elements.mediaSource);\n        sourceElement.remove();\n    }\n\n    addTrackComponent(element, callback) {\n        const trackElement = element.closest(Selectors.EMBED.elements.track);\n        const clone = trackElement.cloneNode(true);\n\n        trackElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\n        trackElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\n\n        trackElement.parentNode.insertBefore(clone, trackElement.nextSibling);\n\n        if (callback) {\n            callback(clone);\n        }\n    }\n\n    removeTrackComponent(element) {\n        const sourceElement = element.closest(Selectors.EMBED.elements.track);\n        sourceElement.remove();\n    }\n\n    getMediumTypeFromTabPane(tabPane) {\n        return tabPane.getAttribute('data-medium-type');\n    }\n\n    getTrackTypeFromTabPane(tabPane) {\n        return tabPane.getAttribute('data-track-kind');\n    }\n\n    getMediaHTML(form) {\n        const mediumType = this.getMediumTypeFromTabPane(form.querySelector('.root.tab-content > .tab-pane.active'));\n        const tabContent = form.querySelector(Selectors.EMBED.elements[mediumType.toLowerCase() + 'Pane']);\n\n        return this['getMediaHTML' + mediumType[0].toUpperCase() + mediumType.substr(1)](tabContent);\n    }\n\n    getMediaHTMLLink(tab) {\n        const context = {\n            url: tab.querySelector(Selectors.EMBED.elements.url).value,\n            name: tab.querySelector(Selectors.EMBED.elements.name).value || false\n        };\n\n        return context.url ? Templates.renderForPromise('tiny_media/embed_media_link', context) : '';\n    }\n\n    getMediaHTMLVideo(tab) {\n        const context = this.getContextForMediaHTML(tab);\n        context.width = tab.querySelector(Selectors.EMBED.elements.width).value || false;\n        context.height = tab.querySelector(Selectors.EMBED.elements.height).value || false;\n        context.poster = tab.querySelector(\n            `${Selectors.EMBED.elements.posterSource} ${Selectors.EMBED.elements.url}`\n        ).value || false;\n\n        return context.sources.length ? Templates.renderForPromise('tiny_media/embed_media_video', context) : '';\n    }\n\n    getMediaHTMLAudio(tab) {\n        const context = this.getContextForMediaHTML(tab);\n\n        return context.sources.length ? Templates.renderForPromise('tiny_media/embed_media_audio', context) : '';\n    }\n\n    getContextForMediaHTML(tab) {\n        const tracks = Array.from(tab.querySelectorAll(Selectors.EMBED.elements.track)).map(track => ({\n            track: track.querySelector(Selectors.EMBED.elements.trackSource + ' ' + Selectors.EMBED.elements.url).value,\n            kind: this.getTrackTypeFromTabPane(track.closest('.tab-pane')),\n            label: track.querySelector(Selectors.EMBED.elements.trackLabel).value ||\n                track.querySelector(Selectors.EMBED.elements.trackLang).value,\n            srclang: track.querySelector(Selectors.EMBED.elements.trackLang).value,\n            defaultTrack: track.querySelector(Selectors.EMBED.elements.trackDefault).checked ? \"true\" : null\n        })).filter((track) => !!track.track);\n\n        const sources = Array.from(tab.querySelectorAll(Selectors.EMBED.elements.mediaSource + ' '\n            + Selectors.EMBED.elements.url))\n                .filter((source) => !!source.value)\n                .map((source) => source.value);\n\n        return {\n            sources,\n            description: tab.querySelector(Selectors.EMBED.elements.mediaSource + ' '\n                + Selectors.EMBED.elements.url).value || false,\n            tracks,\n            showControls: tab.querySelector(Selectors.EMBED.elements.mediaControl).checked,\n            autoplay: tab.querySelector(Selectors.EMBED.elements.mediaAutoplay).checked,\n            muted: tab.querySelector(Selectors.EMBED.elements.mediaMute).checked,\n            loop: tab.querySelector(Selectors.EMBED.elements.mediaLoop).checked,\n            title: tab.querySelector(Selectors.EMBED.elements.title).value || false\n        };\n    }\n\n    getFilepickerTypeFromElement(element) {\n        if (element.closest(Selectors.EMBED.elements.posterSource)) {\n            return 'image';\n        }\n        if (element.closest(Selectors.EMBED.elements.trackSource)) {\n            return 'subtitle';\n        }\n\n        return 'media';\n    }\n\n    async clickHandler(e) {\n        const element = e.target;\n\n        const mediaBrowser = element.closest(Selectors.EMBED.actions.mediaBrowser);\n        if (mediaBrowser) {\n            e.preventDefault();\n            const fpType = this.getFilepickerTypeFromElement(element);\n            const params = await displayFilepicker(this.editor, fpType);\n            this.filePickerCallback(params, element, fpType);\n        }\n\n        const addComponentSourceAction = element.closest(Selectors.EMBED.elements.mediaSource + ' .addcomponent');\n        if (addComponentSourceAction) {\n            e.preventDefault();\n            this.addMediaSourceComponent(element);\n        }\n\n        const removeComponentSourceAction = element.closest(Selectors.EMBED.elements.mediaSource + ' .removecomponent');\n        if (removeComponentSourceAction) {\n            e.preventDefault();\n            this.removeMediaSourceComponent(element);\n        }\n\n        const addComponentTrackAction = element.closest(Selectors.EMBED.elements.track + ' .addcomponent');\n        if (addComponentTrackAction) {\n            e.preventDefault();\n            this.addTrackComponent(element);\n        }\n\n        const removeComponentTrackAction = element.closest(Selectors.EMBED.elements.track + ' .removecomponent');\n        if (removeComponentTrackAction) {\n            e.preventDefault();\n            this.removeTrackComponent(element);\n        }\n\n        // Only allow one track per tab to be selected as \"default\".\n        const trackDefaultAction = element.closest(Selectors.EMBED.elements.trackDefault);\n        if (trackDefaultAction && trackDefaultAction.checked) {\n            const getKind = (el) => this.getTrackTypeFromTabPane(el.parentElement.closest('.tab-pane'));\n\n            element.parentElement\n                .closest('.root.tab-content')\n                .querySelectorAll(Selectors.EMBED.elements.trackDefault)\n                .forEach((select) => {\n                    if (select !== element && getKind(element) === getKind(select)) {\n                        select.checked = false;\n                    }\n                });\n        }\n    }\n\n    async handleDialogueSubmission(event, modal) {\n        const {html} = await this.getMediaHTML(modal.getRoot()[0]);\n        if (html) {\n            if (this.isUpdating) {\n                this.selectedMedia.outerHTML = html;\n                this.isUpdating = false;\n            } else {\n                this.editor.insertContent(html);\n            }\n        }\n    }\n\n    async registerEventListeners(modal) {\n        await modal.getBody();\n        const $root = modal.getRoot();\n        const root = $root[0];\n        if (this.canShowFilePicker || this.canShowFilePickerPoster || this.canShowFilePickerTrack) {\n            root.addEventListener('click', this.clickHandler.bind(this));\n        }\n\n        $root.on(ModalEvents.save, this.handleDialogueSubmission.bind(this));\n        $root.on(ModalEvents.hidden, () => {\n            this.currentModal.destroy();\n        });\n        $root.on(ModalEvents.shown, () => {\n            root.querySelectorAll(Selectors.EMBED.elements.trackLang).forEach((dropdown) => {\n                const defaultVal = dropdown.getAttribute('data-value');\n                if (defaultVal) {\n                    dropdown.value = defaultVal;\n                }\n            });\n        });\n    }\n}\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","obj","__esModule","default","_templates","ModalEvents","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_embedmodal","_selectors","_exports","editor","canShowFilePicker","canShowFilePickerPoster","canShowFilePickerTrack","helpStrings","isUpdating","selectedMedia","constructor","permissions","getEmbedPermissions","this","filepicker","getFilePicker","getHelpStrings","addSource","tracks","subtitles","captions","descriptions","chapters","metadata","getStrings","map","key","component","getTemplateContext","data","languages","prepareMoodleLang","helpIcons","Array","from","entries","forEach","_ref","text","toLowerCase","assign","elementid","getElement","id","showfilepicker","showfilepickerposter","showfilepickertrack","langsinstalled","installed","langsavailable","available","link","video","audio","isupdating","displayDialogue","getSelectedMedia","getCurrentEmbedData","keys","length","currentModal","EmbedModal","create","title","getString","templateContext","registerEventListeners","properties","getMediumProperties","processedProperties","type","mediaElm","selection","getNode","nodeName","querySelector","boolAttr","elem","attr","hasAttribute","getAttribute","sources","medium","querySelectorAll","track","push","src","srclang","label","defaultTrack","source","Selectors","EMBED","mediaTypes","poster","width","height","autoplay","loop","muted","controls","moodleLangs","getMoodleLang","currentLanguage","getCurrentLanguage","_ref2","lang","code","_ref3","getMoodleLangObj","subtitleLang","filePickerCallback","params","element","fpType","url","tabPane","closest","elements","value","name","file","split","slice","langObj","trackLabel","trim","trackLang","addMediaSourceComponent","callback","sourceElement","mediaSource","clone","cloneNode","classList","remove","add","parentNode","insertBefore","nextSibling","removeMediaSourceComponent","addTrackComponent","trackElement","removeTrackComponent","getMediumTypeFromTabPane","getTrackTypeFromTabPane","getMediaHTML","form","mediumType","tabContent","toUpperCase","substr","getMediaHTMLLink","tab","context","Templates","renderForPromise","getMediaHTMLVideo","getContextForMediaHTML","posterSource","getMediaHTMLAudio","trackSource","kind","trackDefault","checked","filter","description","showControls","mediaControl","mediaAutoplay","mediaMute","mediaLoop","getFilepickerTypeFromElement","clickHandler","target","actions","mediaBrowser","preventDefault","displayFilepicker","trackDefaultAction","getKind","el","parentElement","select","handleDialogueSubmission","event","modal","html","getRoot","outerHTML","insertContent","getBody","$root","root","addEventListener","bind","on","save","hidden","destroy","shown","dropdown","defaultVal"],"mappings":"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"}