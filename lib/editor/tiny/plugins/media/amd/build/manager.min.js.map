{"version":3,"file":"manager.min.js","sources":["../src/manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media Manager plugin class for Moodle.\n *\n * @module      tiny_media/manager\n * @copyright   2022, Stevani Andolo <stevani@hotmail.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {getString} from 'core/str';\nimport Modal from 'core/modal';\nimport * as ModalEvents from 'core/modal_events';\nimport {getData} from './options';\nimport Config from 'core/config';\n\nexport default class MediaManager {\n\n    editor = null;\n    area = null;\n\n    constructor(editor) {\n        this.editor = editor;\n        const data = getData(editor);\n        this.area = data.params.area;\n        this.area.itemid = data.fpoptions.image.itemid;\n    }\n\n    async displayDialogue() {\n        const modal = await Modal.create({\n            large: true,\n            title: getString('mediamanagerproperties', 'tiny_media'),\n            body: Templates.render('tiny_media/mm_iframe', {\n                src: this.getIframeURL()\n            }),\n            removeOnClose: true,\n            show: true,\n        });\n        modal.getRoot().on(ModalEvents.bodyRendered, () => {\n            this.selectFirstElement();\n        });\n\n        document.querySelector('.modal-lg').style.cssText = `max-width: 850px`;\n        return modal;\n    }\n\n    // It will select the first element in the file manager.\n    selectFirstElement() {\n        const iframe = document.getElementById('mm-iframe');\n        iframe.addEventListener('load', function() {\n            let intervalId = setInterval(function() {\n                const iDocument = iframe.contentWindow.document;\n                if (iDocument.querySelector('.filemanager')) {\n                    const firstFocusableElement = iDocument.querySelector('.fp-navbar a:not([disabled])');\n                    if (firstFocusableElement) {\n                        firstFocusableElement.focus();\n                    }\n                    clearInterval(intervalId);\n                }\n            }, 200);\n        });\n    }\n\n    getIframeURL() {\n        const url = new URL(`${Config.wwwroot}/lib/editor/tiny/plugins/media/manage.php`);\n        url.searchParams.append('elementid', this.editor.getElement().id);\n        for (const key in this.area) {\n            url.searchParams.append(key, this.area[key]);\n        }\n        return url.toString();\n    }\n}\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","obj","__esModule","default","_templates","_modal","ModalEvents","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_config","_exports","editor","area","constructor","this","data","getData","params","itemid","fpoptions","image","displayDialogue","modal","Modal","create","large","title","getString","body","Templates","render","src","getIframeURL","removeOnClose","show","getRoot","on","bodyRendered","selectFirstElement","document","querySelector","style","cssText","iframe","getElementById","addEventListener","intervalId","setInterval","iDocument","contentWindow","firstFocusableElement","focus","clearInterval","url","URL","Config","wwwroot","searchParams","append","getElement","id","key","toString"],"mappings":"uMA4BiC,SAAAA,yBAAAC,GAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,EAAAD,IAAAA,QAAAE,EAAAF,IAAAA,eAAAF,yBAAA,SAAAC,GAAAA,OAAAA,EAAAG,EAAAD,IAAAF,EAAA,CAAA,SAAAI,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAAE,CAAAA,QAAAF,IAAA;;;;;;;qFALjCG,WAAAJ,uBAAAI,YAEAC,OAAAL,uBAAAK,QACAC,YAEiC,SAAAV,EAAAE,GAAAA,IAAAA,GAAAF,GAAAA,EAAAM,kBAAAN,EAAA,GAAA,OAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,MAAA,CAAAO,QAAAP,GAAA,IAAAG,EAAAJ,yBAAAG,GAAAC,GAAAA,GAAAA,EAAAQ,IAAAX,GAAAG,OAAAA,EAAAS,IAAAZ,GAAAa,IAAAA,GAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,KAAAnB,EAAA,GAAA,YAAAmB,GAAAH,OAAAI,UAAAC,eAAAC,KAAAtB,EAAAmB,GAAAI,CAAAA,IAAAA,EAAAR,EAAAC,OAAAE,yBAAAlB,EAAAmB,GAAA,KAAAI,IAAAA,EAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAnB,EAAAmB,EAAA,CAAA,OAAAN,EAAAN,QAAAP,EAAAG,GAAAA,EAAAqB,IAAAxB,EAAAa,GAAAA,CAAA,CAFjCY,CAAAf,aAEAgB,QAAAtB,uBAAAsB,SAyDC,OAAAC,SAAApB,QAvDc,MAEXqB,OAAS,KACTC,KAAO,KAEPC,WAAAA,CAAYF,QACRG,KAAKH,OAASA,OACd,MAAMI,MAAO,EAAAC,SAAOA,SAACL,QACrBG,KAAKF,KAAOG,KAAKE,OAAOL,KACxBE,KAAKF,KAAKM,OAASH,KAAKI,UAAUC,MAAMF,MAC5C,CAEA,qBAAMG,GACF,MAAMC,YAAcC,OAAKjC,QAACkC,OAAO,CAC7BC,OAAO,EACPC,OAAO,EAAAC,KAAAA,WAAU,yBAA0B,cAC3CC,KAAMC,WAASvC,QAACwC,OAAO,uBAAwB,CAC3CC,IAAKjB,KAAKkB,iBAEdC,eAAe,EACfC,MAAM,IAOV,OALAZ,MAAMa,UAAUC,GAAG3C,YAAY4C,cAAc,KACzCvB,KAAKwB,oBAAoB,IAG7BC,SAASC,cAAc,aAAaC,MAAMC,QAAW,mBAC9CpB,KACX,CAGAgB,kBAAAA,GACI,MAAMK,OAASJ,SAASK,eAAe,aACvCD,OAAOE,iBAAiB,QAAQ,WAC5B,IAAIC,WAAaC,aAAY,WACzB,MAAMC,UAAYL,OAAOM,cAAcV,SACvC,GAAIS,UAAUR,cAAc,gBAAiB,CACzC,MAAMU,sBAAwBF,UAAUR,cAAc,gCAClDU,uBACAA,sBAAsBC,QAE1BC,cAAcN,WAClB,CACH,GAAE,IACP,GACJ,CAEAd,YAAAA,GACI,MAAMqB,IAAM,IAAIC,IAAK,GAAEC,QAAMjE,QAACkE,oDAC9BH,IAAII,aAAaC,OAAO,YAAa5C,KAAKH,OAAOgD,aAAaC,IAC9D,IAAK,MAAMC,OAAO/C,KAAKF,KACnByC,IAAII,aAAaC,OAAOG,IAAK/C,KAAKF,KAAKiD,MAE3C,OAAOR,IAAIS,UACf,GACHpD,SAAApB,OAAA"}