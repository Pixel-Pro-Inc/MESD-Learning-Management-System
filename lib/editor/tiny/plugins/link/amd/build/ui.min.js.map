{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Link UI.\n *\n * @module      tiny_link/ui\n * @copyright   2023 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getFilePicker} from 'editor_tiny/options';\nimport {displayFilepicker} from 'editor_tiny/utils';\nimport LinkModal from 'tiny_link/modal';\nimport {getPermissions} from \"tiny_link/options\";\nimport {setLink, getCurrentLinkData, unSetLink} from \"tiny_link/link\";\nimport Selectors from 'tiny_link/selectors';\n\n/**\n * Handle action.\n *\n * @param {TinyMCE} editor\n * @param {boolean} unlink\n */\nexport const handleAction = (editor, unlink = false) => {\n    if (!unlink) {\n        displayDialogue(editor);\n    } else {\n        unSetLink(editor);\n    }\n};\n\n/**\n * Display the link dialogue.\n *\n * @param {TinyMCE} editor\n * @returns {Promise<void>}\n */\nconst displayDialogue = async(editor) => {\n    const modal = await LinkModal.create({\n        templateContext: getTemplateContext(editor),\n    });\n\n    const $root = await modal.getRoot();\n    const root = $root[0];\n    const currentForm = root.querySelector('form');\n\n    root.addEventListener('click', (e) => {\n        const submitAction = e.target.closest(Selectors.actions.submit);\n        const linkBrowserAction = e.target.closest(Selectors.actions.linkBrowser);\n        if (submitAction) {\n            e.preventDefault();\n            setLink(currentForm, editor);\n            modal.destroy();\n        }\n        if (linkBrowserAction) {\n            e.preventDefault();\n            displayFilepicker(editor, 'link').then((params) => {\n                filePickerCallback(params, currentForm, editor);\n                return modal.destroy();\n            }).catch();\n        }\n    });\n\n    const linkTitle = root.querySelector(Selectors.elements.urlText);\n    const linkUrl = root.querySelector(Selectors.elements.urlEntry);\n    linkTitle.addEventListener('change', () => {\n        if (linkTitle.value.length > 0) {\n            linkTitle.dataset.useLinkAsText = 'false';\n        } else {\n            linkTitle.dataset.useLinkAsText = 'true';\n            linkTitle.value = linkUrl.value;\n        }\n    });\n\n    linkUrl.addEventListener('keyup', () => {\n        updateTextToDisplay(currentForm);\n    });\n};\n\n/**\n * Get template context.\n *\n * @param {TinyMCE} editor\n * @returns {Object}\n */\nconst getTemplateContext = (editor) => {\n    const data = getCurrentLinkData(editor);\n\n    return Object.assign({}, {\n        elementid: editor.id,\n        showfilepicker: getPermissions(editor).filepicker &&\n            (typeof getFilePicker(editor, 'link') !== 'undefined'),\n        isupdating: Object.keys(data).length > 0,\n    }, data);\n};\n\n/**\n * Update the dialogue after a link was selected in the File Picker.\n *\n * @param {Object} params\n * @param {Element} currentForm\n * @param {TinyMCE} editor\n */\nconst filePickerCallback = (params, currentForm, editor) => {\n    if (params.url) {\n        const inputUrl = currentForm.querySelector(Selectors.elements.urlEntry);\n        inputUrl.value = params.url;\n        setLink(currentForm, editor);\n    }\n};\n\n/**\n * Update the text to display if the user does not provide the custom text.\n *\n * @param {Element} currentForm\n */\nconst updateTextToDisplay = (currentForm) => {\n    const urlEntry = currentForm.querySelector(Selectors.elements.urlEntry);\n    const urlText = currentForm.querySelector(Selectors.elements.urlText);\n    if (urlText.dataset.useLinkAsText === 'true') {\n        urlText.value = urlEntry.value;\n    }\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_modal","_selectors","_exports","handleAction","editor","arguments","length","undefined","unSetLink","displayDialogue","async","modal","LinkModal","create","templateContext","getTemplateContext","root","getRoot","currentForm","querySelector","addEventListener","e","submitAction","target","closest","Selectors","actions","submit","linkBrowserAction","linkBrowser","preventDefault","setLink","destroy","displayFilepicker","then","params","filePickerCallback","catch","linkTitle","elements","urlText","linkUrl","urlEntry","value","dataset","useLinkAsText","updateTextToDisplay","data","getCurrentLinkData","Object","assign","elementid","id","showfilepicker","getPermissions","filepicker","getFilePicker","isupdating","keys","url"],"mappings":"+NA4B4C,SAAAA,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAAE,CAAAA,QAAAF,IAAA;;;;;;;0FAH5CG,OAAAJ,uBAAAI,QAGAC,WAAAL,uBAAAK,YAcEC,SAAAC,aAN0B,SAACC,QAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IAInC,EAAAG,MAAAA,WAAUJ,QAFVK,gBAAgBL,SAYxB,MAAMK,gBAAkBC,eACpB,MAAMC,YAAcC,OAASb,QAACc,OAAO,CACjCC,gBAAiBC,mBAAmBX,UAIlCY,YADcL,MAAMM,WACP,GACbC,YAAcF,KAAKG,cAAc,QAEvCH,KAAKI,iBAAiB,SAAUC,IAC5B,MAAMC,aAAeD,EAAEE,OAAOC,QAAQC,WAAS1B,QAAC2B,QAAQC,QAClDC,kBAAoBP,EAAEE,OAAOC,QAAQC,WAAS1B,QAAC2B,QAAQG,aACzDP,eACAD,EAAES,kBACF,EAAAC,MAAOA,SAACb,YAAad,QACrBO,MAAMqB,WAENJ,oBACAP,EAAES,kBACF,EAAAG,OAAAA,mBAAkB7B,OAAQ,QAAQ8B,MAAMC,SACpCC,mBAAmBD,OAAQjB,YAAad,QACjCO,MAAMqB,aACdK,QACP,IAGJ,MAAMC,UAAYtB,KAAKG,cAAcM,WAAAA,QAAUc,SAASC,SAClDC,QAAUzB,KAAKG,cAAcM,WAAAA,QAAUc,SAASG,UACtDJ,UAAUlB,iBAAiB,UAAU,KAC7BkB,UAAUK,MAAMrC,OAAS,EACzBgC,UAAUM,QAAQC,cAAgB,SAElCP,UAAUM,QAAQC,cAAgB,OAClCP,UAAUK,MAAQF,QAAQE,MAC9B,IAGJF,QAAQrB,iBAAiB,SAAS,KAC9B0B,oBAAoB5B,YAAY,GAClC,EASAH,mBAAsBX,SACxB,MAAM2C,MAAO,EAAAC,MAAkBA,oBAAC5C,QAEhC,OAAO6C,OAAOC,OAAO,GAAI,CACrBC,UAAW/C,OAAOgD,GAClBC,gBAAgB,EAAAC,UAAAA,gBAAelD,QAAQmD,iBACO,KAAlC,EAAAC,wBAAcpD,OAAQ,QAClCqD,WAAYR,OAAOS,KAAKX,MAAMzC,OAAS,GACxCyC,KAAK,EAUNX,mBAAqBA,CAACD,OAAQjB,YAAad,UAC7C,GAAI+B,OAAOwB,IAAK,CACKzC,YAAYC,cAAcM,WAAAA,QAAUc,SAASG,UACrDC,MAAQR,OAAOwB,KACxB,EAAA5B,MAAOA,SAACb,YAAad,OACzB,GAQE0C,oBAAuB5B,cACzB,MAAMwB,SAAWxB,YAAYC,cAAcM,WAAAA,QAAUc,SAASG,UACxDF,QAAUtB,YAAYC,cAAcM,WAAAA,QAAUc,SAASC,SACvB,SAAlCA,QAAQI,QAAQC,gBAChBL,QAAQG,MAAQD,SAASC,MAC7B,CACF"}