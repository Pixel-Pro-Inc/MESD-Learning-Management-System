{"version":3,"file":"quickenrolment.min.js","sources":["../src/quickenrolment.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Quick enrolment AMD module.\n *\n * @module     enrol_manual/quickenrolment\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as DynamicTable from 'core_table/dynamic';\nimport * as Str from 'core/str';\nimport * as Toast from 'core/toast';\nimport Config from 'core/config';\nimport Fragment from 'core/fragment';\nimport ModalEvents from 'core/modal_events';\nimport Notification from 'core/notification';\nimport jQuery from 'jquery';\nimport Pending from 'core/pending';\nimport Prefetch from 'core/prefetch';\nimport ModalSaveCancel from 'core/modal_save_cancel';\n\nconst Selectors = {\n    cohortSelector: \"#id_cohortlist\",\n    triggerButtons: \".enrolusersbutton.enrol_manual_plugin [type='submit']\",\n    unwantedHiddenFields: \"input[value='_qf__force_multiselect_submission']\",\n    buttonWrapper: '[data-region=\"wrapper\"]',\n};\n\n/**\n * Get the content of the body for the specified context.\n *\n * @param {Number} contextId\n * @returns {Promise}\n */\nconst getBodyForContext = contextId => {\n    return Fragment.loadFragment('enrol_manual', 'enrol_users_form', contextId, {});\n};\n\n/**\n * Get the dynamic table for the button.\n *\n * @param {HTMLElement} element\n * @returns {HTMLElement}\n */\nconst getDynamicTableForElement = element => {\n    const wrapper = element.closest(Selectors.buttonWrapper);\n\n    return DynamicTable.getTableFromId(wrapper.dataset.tableUniqueid);\n};\n\n/**\n * Register the event listeners for this contextid.\n *\n * @param {Number} contextId\n */\nconst registerEventListeners = contextId => {\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.triggerButtons)) {\n            e.preventDefault();\n\n            showModal(getDynamicTableForElement(e.target), contextId);\n\n            return;\n        }\n    });\n};\n\n/**\n * Display the modal for this contextId.\n *\n * @param {HTMLElement} dynamicTable The table to beb refreshed when changes are made\n * @param {Number} contextId\n * @returns {Promise}\n */\nconst showModal = (dynamicTable, contextId) => {\n    const pendingPromise = new Pending('enrol_manual/quickenrolment:showModal');\n\n    return ModalSaveCancel.create({\n        large: true,\n        title: Str.get_string('enrolusers', 'enrol_manual'),\n        body: getBodyForContext(contextId),\n        buttons: {\n            save: Str.get_string('enrolusers', 'enrol_manual'),\n        },\n        show: true,\n    })\n    .then(modal => {\n        modal.getRoot().on(ModalEvents.save, e => {\n            // Trigger a form submission, so that any mform elements can do final tricks before the form submission\n            // is processed.\n            // The actual submit even tis captured in the next handler.\n\n            e.preventDefault();\n            modal.getRoot().find('form').submit();\n        });\n\n        modal.getRoot().on('submit', 'form', e => {\n            e.preventDefault();\n\n            submitFormAjax(dynamicTable, modal);\n        });\n\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            modal.destroy();\n        });\n\n        return modal;\n    })\n    .then(modal => Promise.all([modal, modal.getBodyPromise()]))\n    .then(([modal, body]) => {\n        if (body.get(0).querySelector(Selectors.cohortSelector)) {\n            return modal.setSaveButtonText(Str.get_string('enroluserscohorts', 'enrol_manual')).then(() => modal);\n        }\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Submit the form via ajax.\n *\n * @param {HTMLElement} dynamicTable\n * @param {Object} modal\n */\nconst submitFormAjax = (dynamicTable, modal) => {\n    // Note: We use a jQuery object here so that we can use its serialize functionality.\n    const form = modal.getRoot().find('form');\n\n    // Before send the data through AJAX, we need to parse and remove some unwanted hidden fields.\n    // This hidden fields are added automatically by mforms and when it reaches the AJAX we get an error.\n    form.get(0).querySelectorAll(Selectors.unwantedHiddenFields).forEach(hiddenField => hiddenField.remove());\n\n    modal.hide();\n    modal.destroy();\n\n    jQuery.ajax(\n        `${Config.wwwroot}/enrol/manual/ajax.php?${form.serialize()}`,\n        {\n            type: 'GET',\n            processData: false,\n            contentType: \"application/json\",\n        }\n    )\n    .then(response => {\n        if (response.error) {\n            throw new Error(response.error);\n        }\n\n        return response.count;\n    })\n    .then(count => {\n        return Promise.all([\n            Str.get_string('totalenrolledusers', 'enrol', count),\n            DynamicTable.refreshTableContent(dynamicTable),\n        ]);\n    })\n    .then(([notificationBody]) => notificationBody)\n    .then(notificationBody => Toast.add(notificationBody))\n    .catch(error => {\n        Notification.addNotification({\n            message: error.message,\n            type: 'error',\n        });\n    });\n};\n\n/**\n * Set up quick enrolment for the manual enrolment plugin.\n *\n * @param {Number} contextid The context id to setup for\n */\nexport const init = ({contextid}) => {\n    registerEventListeners(contextid);\n\n    Prefetch.prefetchStrings('enrol_manual', [\n        'enrolusers',\n        'enroluserscohorts',\n    ]);\n\n    Prefetch.prefetchString('enrol', 'totalenrolledusers');\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","DynamicTable","Str","Toast","_config","_fragment","_modal_events","_notification","_jquery","_pending","_prefetch","_modal_save_cancel","Selectors","getBodyForContext","contextId","Fragment","loadFragment","registerEventListeners","document","addEventListener","target","closest","preventDefault","showModal","element","wrapper","getTableFromId","dataset","tableUniqueid","getDynamicTableForElement","dynamicTable","pendingPromise","Pending","ModalSaveCancel","create","large","title","get_string","body","buttons","save","show","then","modal","getRoot","on","ModalEvents","find","submit","submitFormAjax","hidden","destroy","Promise","all","getBodyPromise","_ref","querySelector","setSaveButtonText","resolve","catch","Notification","exception","form","querySelectorAll","forEach","hiddenField","remove","hide","jQuery","ajax","Config","wwwroot","serialize","type","processData","contentType","response","error","Error","count","refreshTableContent","_ref2","notificationBody","add","addNotification","message","_exports","init","_ref3","contextid","Prefetch","prefetchStrings","prefetchString"],"mappings":"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"}