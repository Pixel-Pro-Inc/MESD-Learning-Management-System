{"version":3,"file":"form.min.js","sources":["../src/form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Custom Field interaction management for Moodle.\n *\n * @module     core_customfield/form\n * @copyright  2018 Toni Barbera\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport 'core/inplace_editable';\nimport {call as fetchMany} from 'core/ajax';\nimport {\n    getString,\n    getStrings,\n} from 'core/str';\nimport ModalForm from 'core_form/modalform';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport SortableList from 'core/sortable_list';\nimport Templates from 'core/templates';\nimport jQuery from 'jquery';\n\n/**\n * Display confirmation dialogue\n *\n * @param {Number} id\n * @param {String} type\n * @param {String} component\n * @param {String} area\n * @param {Number} itemid\n */\nconst confirmDelete = (id, type, component, area, itemid) => {\n    const pendingPromise = new Pending('core_customfield/form:confirmDelete');\n\n    getStrings([\n        {'key': 'confirm'},\n        {'key': 'confirmdelete' + type, component: 'core_customfield'},\n        {'key': 'yes'},\n        {'key': 'no'},\n    ])\n    .then(strings => {\n        return Notification.confirm(strings[0], strings[1], strings[2], strings[3], function() {\n            const pendingDeletePromise = new Pending('core_customfield/form:confirmDelete');\n            fetchMany([\n                {\n                    methodname: (type === 'field') ? 'core_customfield_delete_field' : 'core_customfield_delete_category',\n                    args: {id},\n                },\n                {methodname: 'core_customfield_reload_template', args: {component, area, itemid}}\n            ])[1]\n            .then(response => Templates.render('core_customfield/list', response))\n            .then((html, js) => Templates.replaceNode(jQuery('[data-region=\"list-page\"]'), html, js))\n            .then(pendingDeletePromise.resolve)\n            .catch(Notification.exception);\n        });\n    })\n    .then(pendingPromise.resolve)\n    .catch(Notification.exception);\n};\n\n\n/**\n * Creates a new custom fields category with default name and updates the list\n *\n * @param {String} component\n * @param {String} area\n * @param {Number} itemid\n */\nconst createNewCategory = (component, area, itemid) => {\n    const pendingPromise = new Pending('core_customfield/form:createNewCategory');\n    const promises = fetchMany([\n        {methodname: 'core_customfield_create_category', args: {component, area, itemid}},\n        {methodname: 'core_customfield_reload_template', args: {component, area, itemid}}\n    ]);\n\n    promises[1].then(response => Templates.render('core_customfield/list', response))\n    .then((html, js) => Templates.replaceNode(jQuery('[data-region=\"list-page\"]'), html, js))\n    .then(() => pendingPromise.resolve())\n    .catch(Notification.exception);\n};\n\n/**\n * Create new custom field\n *\n * @param {HTMLElement} element\n * @param {String} component\n * @param {String} area\n * @param {Number} itemid\n */\nconst createNewField = (element, component, area, itemid) => {\n    const pendingPromise = new Pending('core_customfield/form:createNewField');\n\n    const returnFocus = element.closest(\".action-menu\").querySelector(\".dropdown-toggle\");\n    const form = new ModalForm({\n        formClass: \"core_customfield\\\\field_config_form\",\n        args: {\n            categoryid: element.getAttribute('data-categoryid'),\n            type: element.getAttribute('data-type'),\n        },\n        modalConfig: {\n            title: getString('addingnewcustomfield', 'core_customfield', element.getAttribute('data-typename')),\n        },\n        returnFocus,\n    });\n\n    form.addEventListener(form.events.FORM_SUBMITTED, () => {\n        const pendingCreatedPromise = new Pending('core_customfield/form:createdNewField');\n        const promises = fetchMany([\n            {methodname: 'core_customfield_reload_template', args: {component: component, area: area, itemid: itemid}}\n        ]);\n\n        promises[0].then(response => Templates.render('core_customfield/list', response))\n        .then((html, js) => Templates.replaceNode(jQuery('[data-region=\"list-page\"]'), html, js))\n        .then(() => pendingCreatedPromise.resolve())\n        .catch(() => window.location.reload());\n    });\n\n    form.show();\n\n    pendingPromise.resolve();\n};\n\n/**\n * Edit custom field\n *\n * @param {HTMLElement} element\n * @param {String} component\n * @param {String} area\n * @param {Number} itemid\n */\nconst editField = (element, component, area, itemid) => {\n    const pendingPromise = new Pending('core_customfield/form:editField');\n\n    const form = new ModalForm({\n        formClass: \"core_customfield\\\\field_config_form\",\n        args: {\n            id: element.getAttribute('data-id'),\n        },\n        modalConfig: {\n            title: getString('editingfield', 'core_customfield', element.getAttribute('data-name')),\n        },\n        returnFocus: element,\n    });\n\n    form.addEventListener(form.events.FORM_SUBMITTED, () => {\n        const pendingCreatedPromise = new Pending('core_customfield/form:createdNewField');\n        const promises = fetchMany([\n            {methodname: 'core_customfield_reload_template', args: {component: component, area: area, itemid: itemid}}\n        ]);\n\n        promises[0].then(response => Templates.render('core_customfield/list', response))\n        .then((html, js) => Templates.replaceNode(jQuery('[data-region=\"list-page\"]'), html, js))\n        .then(() => pendingCreatedPromise.resolve())\n        .catch(() => window.location.reload());\n    });\n\n    form.show();\n\n    pendingPromise.resolve();\n};\n\n/**\n * Fetch the category name from an inplace editable, given a child node of that field.\n *\n * @param {NodeElement} nodeElement\n * @returns {String}\n */\nconst getCategoryNameFor = nodeElement => nodeElement\n    .closest('[data-category-id]')\n    .find('[data-inplaceeditable][data-itemtype=category][data-component=core_customfield]')\n    .attr('data-value');\n\nconst setupSortableLists = rootNode => {\n    // Sort category.\n    const sortCat = new SortableList(\n        '#customfield_catlist .categorieslist',\n        {\n            moveHandlerSelector: '.movecategory [data-drag-type=move]',\n        }\n    );\n    sortCat.getElementName = nodeElement => Promise.resolve(getCategoryNameFor(nodeElement));\n\n    // Note: The sortable list currently uses jQuery events.\n    jQuery('[data-category-id]').on(SortableList.EVENTS.DROP, (evt, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('core_customfield/form:categoryid:on:sortablelist-drop');\n            fetchMany([{\n                methodname: 'core_customfield_move_category',\n                args: {\n                    id: info.element.data('category-id'),\n                    beforeid: info.targetNextElement.data('category-id')\n                }\n\n            }])[0]\n            .then(pendingPromise.resolve)\n            .catch(Notification.exception);\n        }\n        evt.stopPropagation(); // Important for nested lists to prevent multiple targets.\n    });\n\n    // Sort fields.\n    var sort = new SortableList(\n        '#customfield_catlist .fieldslist tbody',\n        {\n            moveHandlerSelector: '.movefield [data-drag-type=move]',\n        }\n    );\n\n    sort.getDestinationName = (parentElement, afterElement) => {\n        if (!afterElement.length) {\n            return getString('totopofcategory', 'customfield', getCategoryNameFor(parentElement));\n        } else if (afterElement.attr('data-field-name')) {\n            return getString('afterfield', 'customfield', afterElement.attr('data-field-name'));\n        } else {\n            return Promise.resolve('');\n        }\n    };\n\n    jQuery('[data-field-name]').on(SortableList.EVENTS.DROP, (evt, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('core_customfield/form:fieldname:on:sortablelist-drop');\n            fetchMany([{\n                methodname: 'core_customfield_move_field',\n                args: {\n                    id: info.element.data('field-id'),\n                    beforeid: info.targetNextElement.data('field-id'),\n                    categoryid: Number(info.targetList.closest('[data-category-id]').attr('data-category-id'))\n                },\n            }])[0]\n            .then(pendingPromise.resolve)\n            .catch(Notification.exception);\n        }\n        evt.stopPropagation(); // Important for nested lists to prevent multiple targets.\n    });\n\n    jQuery('[data-field-name]').on(SortableList.EVENTS.DRAG, evt => {\n        var pendingPromise = new Pending('core_customfield/form:fieldname:on:sortablelist-drag');\n\n        evt.stopPropagation(); // Important for nested lists to prevent multiple targets.\n\n        // Refreshing fields tables.\n        Templates.render('core_customfield/nofields', {})\n        .then(html => {\n            rootNode.querySelectorAll('.categorieslist > *')\n            .forEach(category => {\n                const fields = category.querySelectorAll('.field:not(.sortable-list-is-dragged)');\n                const noFields = category.querySelector('.nofields');\n\n                if (!fields.length && !noFields) {\n                    category.querySelector('tbody').innerHTML = html;\n                } else if (fields.length && noFields) {\n                    noFields.remove();\n                }\n            });\n            return;\n        })\n        .then(pendingPromise.resolve)\n        .catch(Notification.exception);\n    });\n\n    jQuery('[data-category-id], [data-field-name]').on(SortableList.EVENTS.DRAGSTART, (evt, info) => {\n        setTimeout(() => {\n            jQuery('.sortable-list-is-dragged').width(info.element.width());\n        }, 501);\n    });\n};\n\n/**\n * Initialise the custom fields manager.\n */\nexport const init = () => {\n    const rootNode = document.querySelector('#customfield_catlist');\n\n    const component = rootNode.dataset.component;\n    const area = rootNode.dataset.area;\n    const itemid = rootNode.dataset.itemid;\n\n    rootNode.addEventListener('click', e => {\n        const roleHolder = e.target.closest('[data-role]');\n        if (!roleHolder) {\n            return;\n        }\n\n        if (roleHolder.dataset.role === 'deletefield') {\n            e.preventDefault();\n\n            confirmDelete(roleHolder.dataset.id, 'field', component, area, itemid);\n            return;\n        }\n\n        if (roleHolder.dataset.role === 'deletecategory') {\n            e.preventDefault();\n\n            confirmDelete(roleHolder.dataset.id, 'category', component, area, itemid);\n            return;\n        }\n\n        if (roleHolder.dataset.role === 'addnewcategory') {\n            e.preventDefault();\n            createNewCategory(component, area, itemid);\n\n            return;\n        }\n\n        if (roleHolder.dataset.role === 'addfield') {\n            e.preventDefault();\n            createNewField(roleHolder, component, area, itemid);\n\n            return;\n        }\n\n        if (roleHolder.dataset.role === 'editfield') {\n            e.preventDefault();\n            editField(roleHolder, component, area, itemid);\n\n            return;\n        }\n    });\n\n    setupSortableLists(rootNode, component, area, itemid);\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_modalform","_notification","_pending","_sortable_list","_templates","_jquery","confirmDelete","id","type","component","area","itemid","pendingPromise","Pending","getStrings","key","then","strings","Notification","confirm","pendingDeletePromise","fetchMany","methodname","args","response","Templates","render","html","js","replaceNode","jQuery","resolve","catch","exception","getCategoryNameFor","nodeElement","closest","find","attr","_exports","init","rootNode","document","querySelector","dataset","addEventListener","e","roleHolder","target","role","preventDefault","createNewCategory","createNewField","element","returnFocus","form","ModalForm","formClass","categoryid","getAttribute","modalConfig","title","getString","events","FORM_SUBMITTED","pendingCreatedPromise","window","location","reload","show","editField","SortableList","moveHandlerSelector","getElementName","Promise","on","EVENTS","DROP","evt","info","positionChanged","data","beforeid","targetNextElement","stopPropagation","getDestinationName","parentElement","afterElement","length","Number","targetList","DRAG","querySelectorAll","forEach","category","fields","noFields","remove","innerHTML","DRAGSTART","setTimeout","width","setupSortableLists"],"mappings":"uTAkC4B,SAAAA,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAAE,CAAAA,QAAAF,IAAA;;;;;;;kFAL5BG,WAAAJ,uBAAAI,YACAC,cAAAL,uBAAAK,eACAC,SAAAN,uBAAAM,UACAC,eAAAP,uBAAAO,gBACAC,WAAAR,uBAAAQ,YACAC,QAAAT,uBAAAS,SAWA,MAAMC,cAAgBA,CAACC,GAAIC,KAAMC,UAAWC,KAAMC,UAC9C,MAAMC,eAAiB,IAAIC,SAAOd,QAAC,wCAEnC,EAAAe,KAAAA,YAAW,CACP,CAACC,IAAO,WACR,CAACA,IAAO,gBAAkBP,KAAMC,UAAW,oBAC3C,CAACM,IAAO,OACR,CAACA,IAAO,QAEXC,MAAKC,SACKC,cAAAA,QAAaC,QAAQF,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,IAAI,WACxE,MAAMG,qBAAuB,IAAIP,SAAOd,QAAC,wCACzC,EAAAsB,MAAAA,MAAU,CACN,CACIC,WAAsB,UAATd,KAAoB,gCAAkC,mCACnEe,KAAM,CAAChB,QAEX,CAACe,WAAY,mCAAoCC,KAAM,CAACd,oBAAWC,UAAMC,kBAC1E,GACFK,MAAKQ,UAAYC,WAAS1B,QAAC2B,OAAO,wBAAyBF,YAC3DR,MAAK,CAACW,KAAMC,KAAOH,mBAAUI,aAAY,EAAAC,QAAM/B,SAAC,6BAA8B4B,KAAMC,MACpFZ,KAAKI,qBAAqBW,SAC1BC,MAAMd,cAAAA,QAAae,UACxB,MAEHjB,KAAKJ,eAAemB,SACpBC,MAAMd,cAAYnB,QAACkC,UAAU,EA8G5BC,mBAAqBC,aAAeA,YACrCC,QAAQ,sBACRC,KAAK,mFACLC,KAAK,cAsJRC,SAAAC,KAlDkBA,KAChB,MAAMC,SAAWC,SAASC,cAAc,wBAElClC,UAAYgC,SAASG,QAAQnC,UAC7BC,KAAO+B,SAASG,QAAQlC,KACxBC,OAAS8B,SAASG,QAAQjC,OAEhC8B,SAASI,iBAAiB,SAASC,IAC/B,MAAMC,WAAaD,EAAEE,OAAOZ,QAAQ,eACpC,GAAKW,WAIL,MAAgC,gBAA5BA,WAAWH,QAAQK,MACnBH,EAAEI,sBAEF5C,cAAcyC,WAAWH,QAAQrC,GAAI,QAASE,UAAWC,KAAMC,SAInC,mBAA5BoC,WAAWH,QAAQK,MACnBH,EAAEI,sBAEF5C,cAAcyC,WAAWH,QAAQrC,GAAI,WAAYE,UAAWC,KAAMC,SAItC,mBAA5BoC,WAAWH,QAAQK,MACnBH,EAAEI,qBAtOYC,EAAC1C,UAAWC,KAAMC,UACxC,MAAMC,eAAiB,IAAIC,SAAOd,QAAC,4CAClB,EAAAsB,MAAAA,MAAU,CACvB,CAACC,WAAY,mCAAoCC,KAAM,CAACd,oBAAWC,UAAMC,gBACzE,CAACW,WAAY,mCAAoCC,KAAM,CAACd,oBAAWC,UAAMC,kBAGpE,GAAGK,MAAKQ,UAAYC,WAAAA,QAAUC,OAAO,wBAAyBF,YACtER,MAAK,CAACW,KAAMC,KAAOH,WAAAA,QAAUI,aAAY,EAAAC,QAAAA,SAAO,6BAA8BH,KAAMC,MACpFZ,MAAK,IAAMJ,eAAemB,YAC1BC,MAAMd,cAAAA,QAAae,UAAU,EA6NtBkB,CAAkB1C,UAAWC,KAAMC,SAKP,aAA5BoC,WAAWH,QAAQK,MACnBH,EAAEI,qBAxNSE,EAACC,QAAS5C,UAAWC,KAAMC,UAC9C,MAAMC,eAAiB,IAAIC,SAAOd,QAAC,wCAE7BuD,YAAcD,QAAQjB,QAAQ,gBAAgBO,cAAc,oBAC5DY,KAAO,IAAIC,WAAAA,QAAU,CACvBC,UAAW,sCACXlC,KAAM,CACFmC,WAAYL,QAAQM,aAAa,mBACjCnD,KAAM6C,QAAQM,aAAa,cAE/BC,YAAa,CACTC,OAAO,EAAAC,KAASA,WAAC,uBAAwB,mBAAoBT,QAAQM,aAAa,mBAEtFL,0BAGJC,KAAKV,iBAAiBU,KAAKQ,OAAOC,gBAAgB,KAC9C,MAAMC,sBAAwB,IAAIpD,SAAOd,QAAC,0CACzB,EAAAsB,MAAAA,MAAU,CACvB,CAACC,WAAY,mCAAoCC,KAAM,CAACd,UAAWA,UAAWC,KAAMA,KAAMC,OAAQA,WAG7F,GAAGK,MAAKQ,UAAYC,WAAS1B,QAAC2B,OAAO,wBAAyBF,YACtER,MAAK,CAACW,KAAMC,KAAOH,WAAAA,QAAUI,aAAY,EAAAC,QAAM/B,SAAC,6BAA8B4B,KAAMC,MACpFZ,MAAK,IAAMiD,sBAAsBlC,YACjCC,OAAM,IAAMkC,OAAOC,SAASC,UAAS,IAG1Cb,KAAKc,OAELzD,eAAemB,SAAS,EA2LhBqB,CAAeL,WAAYtC,UAAWC,KAAMC,SAKhB,cAA5BoC,WAAWH,QAAQK,MACnBH,EAAEI,qBAtLIoB,EAACjB,QAAS5C,UAAWC,KAAMC,UACzC,MAAMC,eAAiB,IAAIC,SAAOd,QAAC,mCAE7BwD,KAAO,IAAIC,WAAAA,QAAU,CACvBC,UAAW,sCACXlC,KAAM,CACFhB,GAAI8C,QAAQM,aAAa,YAE7BC,YAAa,CACTC,OAAO,EAAAC,KAASA,WAAC,eAAgB,mBAAoBT,QAAQM,aAAa,eAE9EL,YAAaD,UAGjBE,KAAKV,iBAAiBU,KAAKQ,OAAOC,gBAAgB,KAC9C,MAAMC,sBAAwB,IAAIpD,SAAOd,QAAC,0CACzB,EAAAsB,MAAAA,MAAU,CACvB,CAACC,WAAY,mCAAoCC,KAAM,CAACd,UAAWA,UAAWC,KAAMA,KAAMC,OAAQA,WAG7F,GAAGK,MAAKQ,UAAYC,WAAS1B,QAAC2B,OAAO,wBAAyBF,YACtER,MAAK,CAACW,KAAMC,KAAOH,WAAAA,QAAUI,aAAY,EAAAC,QAAM/B,SAAC,6BAA8B4B,KAAMC,MACpFZ,MAAK,IAAMiD,sBAAsBlC,YACjCC,OAAM,IAAMkC,OAAOC,SAASC,UAAS,IAG1Cb,KAAKc,OAELzD,eAAemB,SAAS,EA2JhBuC,CAAUvB,WAAYtC,UAAWC,KAAMC,cAF3C,CAKA,IAhJmB8B,YAEP,IAAI8B,eAAYxE,QAC5B,uCACA,CACIyE,oBAAqB,wCAGrBC,eAAiBtC,aAAeuC,QAAQ3C,QAAQG,mBAAmBC,eAG3E,EAAAL,iBAAO,sBAAsB6C,GAAGJ,eAAAA,QAAaK,OAAOC,MAAM,CAACC,IAAKC,QAC5D,GAAIA,KAAKC,gBAAiB,CACtB,MAAMpE,eAAiB,IAAIC,SAAOd,QAAC,0DACnC,EAAAsB,MAAAA,MAAU,CAAC,CACPC,WAAY,iCACZC,KAAM,CACFhB,GAAIwE,KAAK1B,QAAQ4B,KAAK,eACtBC,SAAUH,KAAKI,kBAAkBF,KAAK,mBAG1C,GACHjE,KAAKJ,eAAemB,SACpBC,MAAMd,cAAYnB,QAACkC,UACxB,CACA6C,IAAIM,iBAAiB,IAId,IAAIb,eAAYxE,QACvB,yCACA,CACIyE,oBAAqB,qCAIxBa,mBAAqB,CAACC,cAAeC,eACjCA,aAAaC,OAEPD,aAAajD,KAAK,oBAClB,EAAAwB,KAAAA,WAAU,aAAc,cAAeyB,aAAajD,KAAK,oBAEzDoC,QAAQ3C,QAAQ,KAJhB,EAAA+B,KAASA,WAAC,kBAAmB,cAAe5B,mBAAmBoD,iBAQ9E,EAAAxD,iBAAO,qBAAqB6C,GAAGJ,eAAAA,QAAaK,OAAOC,MAAM,CAACC,IAAKC,QAC3D,GAAIA,KAAKC,gBAAiB,CACtB,MAAMpE,eAAiB,IAAIC,SAAOd,QAAC,yDACnC,EAAAsB,MAAAA,MAAU,CAAC,CACPC,WAAY,8BACZC,KAAM,CACFhB,GAAIwE,KAAK1B,QAAQ4B,KAAK,YACtBC,SAAUH,KAAKI,kBAAkBF,KAAK,YACtCvB,WAAY+B,OAAOV,KAAKW,WAAWtD,QAAQ,sBAAsBE,KAAK,yBAE1E,GACHtB,KAAKJ,eAAemB,SACpBC,MAAMd,cAAYnB,QAACkC,UACxB,CACA6C,IAAIM,iBAAiB,KAGzB,EAAAtD,QAAM/B,SAAC,qBAAqB4E,GAAGJ,eAAYxE,QAAC6E,OAAOe,MAAMb,MACrD,IAAIlE,eAAiB,IAAIC,SAAOd,QAAC,wDAEjC+E,IAAIM,kBAGJ3D,WAAAA,QAAUC,OAAO,4BAA6B,CAAA,GAC7CV,MAAKW,OACFc,SAASmD,iBAAiB,uBACzBC,SAAQC,WACL,MAAMC,OAASD,SAASF,iBAAiB,yCACnCI,SAAWF,SAASnD,cAAc,aAEnCoD,OAAOP,QAAWQ,SAEZD,OAAOP,QAAUQ,UACxBA,SAASC,SAFTH,SAASnD,cAAc,SAASuD,UAAYvE,IAGhD,GAEJ,IAEHX,KAAKJ,eAAemB,SACpBC,MAAMd,cAAYnB,QAACkC,UAAU,KAGlC,EAAAH,iBAAO,yCAAyC6C,GAAGJ,eAAAA,QAAaK,OAAOuB,WAAW,CAACrB,IAAKC,QACpFqB,YAAW,MACP,EAAAtE,QAAM/B,SAAC,6BAA6BsG,MAAMtB,KAAK1B,QAAQgD,QAAQ,GAChE,IAAI,GACT,EAuDFC,CAAmB7D,SAAkC,CACvD"}