{"version":3,"file":"columns.min.js","sources":["../../../src/local/editor/columns.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder columns editor\n *\n * @module      core_reportbuilder/local/editor/columns\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport $ from 'jquery';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'core/inplace_editable';\nimport {eventTypes as inplaceEditableEvents} from 'core/local/inplace_editable/events';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport {publish} from 'core/pubsub';\nimport SortableList from 'core/sortable_list';\nimport {getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {addColumn, deleteColumn, reorderColumn} from 'core_reportbuilder/local/repository/columns';\nimport {getColumnSorting} from 'core_reportbuilder/local/repository/sorting';\n\n/**\n * Initialise module, prefetch all required strings\n *\n * @param {Boolean} initialized Ensure we only add our listeners once\n */\nexport const init = initialized => {\n    prefetchStrings('core_reportbuilder', [\n        'columnadded',\n        'columnaggregated',\n        'columndeleted',\n        'columnmoved',\n        'deletecolumn',\n        'deletecolumnconfirm',\n    ]);\n\n    prefetchStrings('core', [\n        'delete',\n    ]);\n\n    if (initialized) {\n        return;\n    }\n\n    document.addEventListener('click', event => {\n\n        // Add column to report.\n        const reportAddColumn = event.target.closest(reportSelectors.actions.reportAddColumn);\n        if (reportAddColumn) {\n            event.preventDefault();\n\n            const pendingPromise = new Pending('core_reportbuilder/columns:add');\n            const reportElement = reportAddColumn.closest(reportSelectors.regions.report);\n\n            addColumn(reportElement.dataset.reportId, reportAddColumn.dataset.uniqueIdentifier)\n                .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                .then(() => getString('columnadded', 'core_reportbuilder', reportAddColumn.dataset.name))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n\n        // Remove column from report.\n        const reportRemoveColumn = event.target.closest(reportSelectors.actions.reportRemoveColumn);\n        if (reportRemoveColumn) {\n            event.preventDefault();\n\n            const reportElement = reportRemoveColumn.closest(reportSelectors.regions.report);\n            const columnHeader = reportRemoveColumn.closest(reportSelectors.regions.columnHeader);\n            const columnName = columnHeader.dataset.columnName;\n\n            Notification.saveCancelPromise(\n                getString('deletecolumn', 'core_reportbuilder', columnName),\n                getString('deletecolumnconfirm', 'core_reportbuilder', columnName),\n                getString('delete', 'core'),\n                {triggerElement: reportRemoveColumn}\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/columns:remove');\n\n                return deleteColumn(reportElement.dataset.reportId, columnHeader.dataset.columnId)\n                    .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                    .then(() => addToast(getString('columndeleted', 'core_reportbuilder', columnName)))\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n\n    // Initialize sortable list to handle column moving (note JQuery dependency, see MDL-72293 for resolution).\n    var columnSortableList = new SortableList(`${reportSelectors.regions.reportTable} thead tr`, {isHorizontal: true});\n    columnSortableList.getElementName = element => Promise.resolve(element.data('columnName'));\n\n    $(document).on(SortableList.EVENTS.DRAG, `${reportSelectors.regions.report} th[data-column-id]`, (event, info) => {\n        const reportElement = event.target.closest(reportSelectors.regions.report);\n        const columnPosition = info.element.data('columnPosition');\n        const targetColumnPosition = info.targetNextElement.data('columnPosition');\n\n        $(reportElement).find('tbody tr').each(function() {\n            const cell = $(this).children(`td.c${columnPosition - 1}`)[0];\n            if (targetColumnPosition) {\n                var beforeCell = $(this).children(`td.c${targetColumnPosition - 1}`)[0];\n                this.insertBefore(cell, beforeCell);\n            } else {\n                this.appendChild(cell);\n            }\n        });\n    });\n\n    $(document).on(SortableList.EVENTS.DROP, `${reportSelectors.regions.report} th[data-column-id]`, (event, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('core_reportbuilder/columns:reorder');\n            const reportElement = event.target.closest(reportSelectors.regions.report);\n            const columnId = info.element.data('columnId');\n            const columnName = info.element.data('columnName');\n            const columnPosition = info.element.data('columnPosition');\n\n            // Select target position, if moving to the end then count number of element siblings.\n            let targetColumnPosition = info.targetNextElement.data('columnPosition') || info.element.siblings().length + 2;\n            if (targetColumnPosition > columnPosition) {\n                targetColumnPosition--;\n            }\n\n            reorderColumn(reportElement.dataset.reportId, columnId, targetColumnPosition)\n                .then(() => getString('columnmoved', 'core_reportbuilder', columnName))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n    });\n\n    // Initialize inplace editable listeners for column aggregation.\n    document.addEventListener(inplaceEditableEvents.elementUpdated, event => {\n\n        const columnAggregation = event.target.closest('[data-itemtype=\"columnaggregation\"]');\n        if (columnAggregation) {\n            const pendingPromise = new Pending('core_reportbuilder/columns:aggregate');\n            const reportElement = columnAggregation.closest(reportSelectors.regions.report);\n            const columnHeader = columnAggregation.closest(reportSelectors.regions.columnHeader);\n\n            getString('columnaggregated', 'core_reportbuilder', columnHeader.dataset.columnName)\n                .then(addToast)\n                .then(() => {\n                    // Pass preserveTriggerElement parameter so columnAggregationLink will be focused after the report reload.\n                    const columnAggregationLink = `[data-itemtype=\"columnaggregation\"][data-itemid=\"`\n                        + `${columnAggregation.dataset.itemid}\"] > a`;\n\n                    // Now reload the table, and notify listeners that columns have been updated.\n                    dispatchEvent(reportEvents.tableReload, {preserveTriggerElement: columnAggregationLink}, reportElement);\n                    return getColumnSorting(reportElement.dataset.reportId);\n                })\n                .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                .then(() => pendingPromise.resolve())\n                .catch(Notification.exception);\n        }\n    });\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireDefault","obj","_exports","value","init","_jquery","_notification","_pending","_sortable_list","reportEvents","reportSelectors","initialized","prefetchStrings","document","addEventListener","event","reportAddColumn","target","closest","actions","preventDefault","pendingPromise","Pending","reportElement","regions","report","addColumn","dataset","reportId","uniqueIdentifier","then","data","publish","reportColumnsUpdated","getString","name","addToast","dispatchEvent","tableReload","preservePagination","resolve","catch","Notification","exception","reportRemoveColumn","columnHeader","columnName","saveCancelPromise","triggerElement","deleteColumn","columnId","SortableList","reportTable","isHorizontal","getElementName","element","Promise","$","on","EVENTS","DRAG","info","columnPosition","targetColumnPosition","targetNextElement","find","each","cell","this","children","beforeCell","insertBefore","appendChild","DROP","positionChanged","siblings","length","reorderColumn","add","inplaceEditableEvents","elementUpdated","columnAggregation","columnAggregationLink","itemid","preserveTriggerElement","getColumnSorting"],"mappings":"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"}