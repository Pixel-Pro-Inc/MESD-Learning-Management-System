{"version":3,"file":"update_random_question_filter_condition.min.js","sources":["../src/update_random_question_filter_condition.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Event handling for the edit random question form.\n *\n * Dynamically saves the new filter condition before navigating back to the quiz question list.\n *\n * @module     mod_quiz/update_random_question_filter_condition\n * @author      2022 <nathannguyen@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nexport const init = () => {\n    const SELECTORS = {\n        QUESTION_BANK_CONTAINER: '#questionbank_container',\n        FORM_ELEMENT: '#update_filter_condition_form',\n        UPDATE_BUTTON: '[name=\"update\"]',\n        CANCEL_BUTTON: '[name=\"cancel\"]',\n        MESSAGE_INPUT: '[name=\"message\"]',\n        FILTER_CONDITION_ELEMENT: '[data-filtercondition]',\n    };\n\n    const questionBank = document.querySelector(SELECTORS.QUESTION_BANK_CONTAINER);\n    const form = document.querySelector(SELECTORS.FORM_ELEMENT);\n    const updateButton = form.querySelector(SELECTORS.UPDATE_BUTTON);\n\n    updateButton.addEventListener(\"click\", async(e) => {\n        e.preventDefault();\n        const request = {\n            methodname: 'mod_quiz_update_filter_condition',\n            args: {\n                cmid: form.dataset?.cmid,\n                slotid: form.dataset?.slotid,\n                filtercondition: questionBank.querySelector(SELECTORS.FILTER_CONDITION_ELEMENT).dataset?.filtercondition,\n            }\n        };\n        try {\n            const response = await ajax.call([request])[0];\n            const messageInput = form.querySelector(SELECTORS.MESSAGE_INPUT);\n            messageInput.value = response.message;\n            form.submit();\n        } catch (e) {\n            Notification.exception(e);\n        }\n    });\n\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_ajax","_notification","_exports","init","SELECTORS","questionBank","document","querySelector","form","addEventListener","async","_form$dataset","_form$dataset2","_questionBank$querySe","e","preventDefault","request","methodname","args","cmid","dataset","slotid","filtercondition","response","ajax","call","value","message","submit","Notification","exception"],"mappings":"8IA0B6C,SAAAA,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAAE,CAAAA,QAAAF,IAAA;;;;;;;;;kFAD7CG,MAAAJ,uBAAAI,OACAC,cAAAL,uBAAAK,eAoCEC,SAAAC,KAlCkBA,KAChB,MAAMC,kCACuB,0BADvBA,uBAEY,gCAFZA,wBAGa,kBAHbA,wBAKa,mBALbA,mCAMwB,yBAGxBC,aAAeC,SAASC,cAAcH,mCACtCI,KAAOF,SAASC,cAAcH,wBACfI,KAAKD,cAAcH,yBAE3BK,iBAAiB,SAASC,UAAY,IAAAC,cAAAC,eAAAC,sBAC/CC,EAAEC,iBACF,MAAMC,QAAU,CACZC,WAAY,mCACZC,KAAM,CACFC,KAAkB,QAAdR,cAAEH,KAAKY,eAAO,IAAAT,mBAAA,EAAZA,cAAcQ,KACpBE,OAAoB,QAAdT,eAAEJ,KAAKY,eAAO,IAAAR,oBAAA,EAAZA,eAAcS,OACtBC,wBAAeT,sBAAER,aAAaE,cAAcH,oCAAoCgB,eAAO,IAAAP,2BAAA,EAAtEA,sBAAwES,kBAGjG,IACI,MAAMC,eAAiBC,MAAAA,QAAKC,KAAK,CAACT,UAAU,GACvBR,KAAKD,cAAcH,yBAC3BsB,MAAQH,SAASI,QAC9BnB,KAAKoB,QACR,CAAC,MAAOd,GACLe,cAAAA,QAAaC,UAAUhB,EAC3B,IACF,CAEJ"}