{"version":3,"file":"discussion_nested_v2.min.js","sources":["../src/discussion_nested_v2.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module for viewing a discussion in nested v2 view.\n *\n * @module mod_forum/discussion_nested_v2\n * @copyright  2019 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport AutoRows from 'core/auto_rows';\nimport CustomEvents from 'core/custom_interaction_events';\nimport * as FormChangeChecker from 'core_form/changechecker';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport Discussion from 'mod_forum/discussion';\nimport InPageReply from 'mod_forum/inpage_reply';\nimport LockToggle from 'mod_forum/lock_toggle';\nimport FavouriteToggle from 'mod_forum/favourite_toggle';\nimport Pin from 'mod_forum/pin_toggle';\nimport Selectors from 'mod_forum/selectors';\nimport Subscribe from 'mod_forum/subscription_toggle';\n\nconst ANIMATION_DURATION = 150;\n\n/**\n * Get the closest post container element from the given element.\n *\n * @param {Object} element jQuery element to search from\n * @return {Object} jQuery element\n */\nconst getPostContainer = (element) => {\n    return element.closest(Selectors.post.post);\n};\n\n/**\n * Get the closest post container element from the given element.\n *\n * @param {Object} element jQuery element to search from\n * @param {Number} id Id of the post to find.\n * @return {Object} jQuery element\n */\nconst getPostContainerById = (element, id) => {\n    return element.find(`${Selectors.post.post}[data-post-id=${id}]`);\n};\n\n/**\n * Get the parent post container elements from the given element.\n *\n * @param {Object} element jQuery element to search from\n * @return {Object} jQuery element\n */\nconst getParentPostContainers = (element) => {\n    return element.parents(Selectors.post.post);\n};\n\n/**\n * Get the post content container element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getPostContentContainer = (postContainer) => {\n    return postContainer.children().not(Selectors.post.repliesContainer).find(Selectors.post.forumCoreContent);\n};\n\n/**\n * Get the in page reply container element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getInPageReplyContainer = (postContainer) => {\n    return postContainer.children().filter(Selectors.post.inpageReplyContainer);\n};\n\n/**\n * Get the in page reply form element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getInPageReplyForm = (postContainer) => {\n    return getInPageReplyContainer(postContainer).find(Selectors.post.inpageReplyContent);\n};\n\n/**\n * Get the in page reply create (reply) button element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getInPageReplyCreateButton = (postContainer) => {\n    return getPostContentContainer(postContainer).find(Selectors.post.inpageReplyCreateButton);\n};\n\n/**\n * Get the replies visibility toggle container (show/hide replies button container) element\n * from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getRepliesVisibilityToggleContainer = (postContainer) => {\n    return postContainer.children(Selectors.post.repliesVisibilityToggleContainer);\n};\n\n/**\n * Get the replies container element from the post container element.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery element\n */\nconst getRepliesContainer = (postContainer) => {\n    return postContainer.children(Selectors.post.repliesContainer);\n};\n\n/**\n * Check if the post has any replies.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Bool}\n */\nconst hasReplies = (postContainer) => {\n    return getRepliesContainer(postContainer).children().length > 0;\n};\n\n/**\n * Get the show replies button element from the replies visibility toggle container element.\n *\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\n * @return {Object} jQuery element\n */\nconst getShowRepliesButton = (replyVisibilityToggleContainer) => {\n    return replyVisibilityToggleContainer.find(Selectors.post.showReplies);\n};\n\n/**\n * Get the hide replies button element from the replies visibility toggle container element.\n *\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\n * @return {Object} jQuery element\n */\nconst getHideRepliesButton = (replyVisibilityToggleContainer) => {\n    return replyVisibilityToggleContainer.find(Selectors.post.hideReplies);\n};\n\n/**\n * Check if the replies are visible.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @return {Bool}\n */\nconst repliesVisible = (postContainer) => {\n    const repliesContainer = getRepliesContainer(postContainer);\n    return repliesContainer.is(':visible');\n};\n\n/**\n * Show the post replies.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\n */\nconst showReplies = (postContainer, postIdToSee = null) => {\n    const repliesContainer = getRepliesContainer(postContainer);\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\n\n    showButton.addClass('hidden');\n    hideButton.removeClass('hidden');\n\n    repliesContainer.slideDown({\n        duration: ANIMATION_DURATION,\n        queue: false,\n        complete: () => {\n            if (postIdToSee) {\n                const postContainerToSee = getPostContainerById(repliesContainer, postIdToSee);\n                if (postContainerToSee.length) {\n                    postContainerToSee[0].scrollIntoView();\n                }\n            }\n        }\n    }).css('display', 'none').fadeIn(ANIMATION_DURATION);\n};\n\n/**\n * Hide the post replies.\n *\n * @param {Object} postContainer jQuery element for the post container\n */\nconst hideReplies = (postContainer) => {\n    const repliesContainer = getRepliesContainer(postContainer);\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\n\n    showButton.removeClass('hidden');\n    hideButton.addClass('hidden');\n\n    repliesContainer.slideUp({\n        duration: ANIMATION_DURATION,\n        queue: false\n    }).fadeOut(ANIMATION_DURATION);\n};\n\n/** Variable to hold the showInPageReplyForm function after it's built. */\nlet showInPageReplyForm = null;\n\n/**\n * Build the showInPageReplyForm function with the given additional template context.\n *\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template.\n * @return {Function}\n */\nconst buildShowInPageReplyFormFunction = (additionalTemplateContext) => {\n    /**\n     * Show the in page reply form in the given in page reply container. The form\n     * display will be animated.\n     *\n     * @param {Object} postContainer jQuery element for the post container\n     */\n    return async(postContainer) => {\n\n        const inPageReplyContainer = getInPageReplyContainer(postContainer);\n        const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n        const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\n\n        if (!hasInPageReplyForm(inPageReplyContainer)) {\n            try {\n                const html = await renderInPageReplyTemplate(additionalTemplateContext, inPageReplyCreateButton, postContainer);\n                Templates.appendNodeContents(inPageReplyContainer, html, '');\n            } catch (e) {\n                Notification.exception(e);\n            }\n\n            FormChangeChecker.watchForm(postContainer[0].querySelector('form'));\n        }\n\n        inPageReplyCreateButton.fadeOut(ANIMATION_DURATION, () => {\n            const inPageReplyForm = getInPageReplyForm(postContainer);\n            inPageReplyForm.slideDown({\n                duration: ANIMATION_DURATION,\n                queue: false,\n                complete: () => {\n                    inPageReplyForm.find('textarea').focus();\n                }\n            }).css('display', 'none').fadeIn(ANIMATION_DURATION);\n\n            if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\n                repliesVisibilityToggleContainer.fadeIn(ANIMATION_DURATION);\n                hideReplies(postContainer);\n            }\n        });\n    };\n};\n\n/**\n * Hide the in page reply form in the given in page reply container. The form\n * display will be animated.\n *\n * @param {Object} postContainer jQuery element for the post container\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\n */\nconst hideInPageReplyForm = (postContainer, postIdToSee = null) => {\n    const inPageReplyForm = getInPageReplyForm(postContainer);\n    const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\n    const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\n\n    if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\n        repliesVisibilityToggleContainer.fadeOut(ANIMATION_DURATION);\n        if (!repliesVisible(postContainer)) {\n            showReplies(postContainer, postIdToSee);\n        }\n    }\n\n    inPageReplyForm.slideUp({\n        duration: ANIMATION_DURATION,\n        queue: false,\n        complete: () => {\n            inPageReplyCreateButton.fadeIn(ANIMATION_DURATION);\n        }\n    }).fadeOut(200);\n};\n\n/**\n * Check if the in page reply container contains the in page reply form.\n *\n * @param {Object} inPageReplyContainer jQuery element for the in page reply container\n * @return {Bool}\n */\nconst hasInPageReplyForm = (inPageReplyContainer) => {\n    return inPageReplyContainer.find(Selectors.post.inpageReplyContent).length > 0;\n};\n\n/**\n * Render the template to generate the in page reply form HTML.\n *\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template\n * @param {Object} button jQuery element for the reply button that was clicked\n * @param {Object} postContainer jQuery element for the post container\n * @return {Object} jQuery promise\n */\nconst renderInPageReplyTemplate = (additionalTemplateContext, button, postContainer) => {\n    const postContentContainer = getPostContentContainer(postContainer);\n    const currentSubject = postContentContainer.find(Selectors.post.forumSubject).text();\n    const currentAuthorName = postContentContainer.find(Selectors.post.authorName).text();\n    const context = {\n        postid: postContainer.data('post-id'),\n        \"reply_url\": button.attr('data-href'),\n        sesskey: M.cfg.sesskey,\n        parentsubject: currentSubject,\n        parentauthorname: currentAuthorName,\n        canreplyprivately: button.data('can-reply-privately'),\n        postformat: InPageReply.CONTENT_FORMATS.MOODLE,\n        ...additionalTemplateContext\n    };\n\n    return Templates.render('mod_forum/inpage_reply_v2', context);\n};\n\n/**\n * Increment the total reply count in the show/hide replies buttons for the post.\n *\n * @param {Object} postContainer jQuery element for the post container\n */\nconst incrementTotalReplyCount = (postContainer) => {\n    getRepliesVisibilityToggleContainer(postContainer).find(Selectors.post.replyCount).each((index, element) => {\n        const currentCount = parseInt(element.innerText, 10);\n        element.innerText = currentCount + 1;\n    });\n};\n\n/**\n * Create all of the event listeners for the discussion.\n *\n * @param {Object} root jQuery element for the discussion container\n */\nconst registerEventListeners = (root) => {\n    CustomEvents.define(root, [CustomEvents.events.activate]);\n    // Auto expanding text area for in page reply.\n    AutoRows.init(root);\n\n    // Reply button is clicked.\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCreateButton, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.currentTarget));\n        showInPageReplyForm(postContainer);\n    });\n\n    // Cancel in page reply button.\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCancelButton, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.currentTarget));\n        hideInPageReplyForm(postContainer);\n    });\n\n    // Show replies button clicked.\n    root.on(CustomEvents.events.activate, Selectors.post.showReplies, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.target));\n        showReplies(postContainer);\n    });\n\n    // Hide replies button clicked.\n    root.on(CustomEvents.events.activate, Selectors.post.hideReplies, (e, data) => {\n        data.originalEvent.preventDefault();\n        const postContainer = getPostContainer($(e.target));\n        hideReplies(postContainer);\n    });\n\n    // Post created with in page reply.\n    root.on(InPageReply.EVENTS.POST_CREATED, Selectors.post.inpageSubmitBtn, (e, newPostId) => {\n        const currentTarget = $(e.currentTarget);\n        const postContainer = getPostContainer(currentTarget);\n        const postContainers = getParentPostContainers(currentTarget);\n        hideInPageReplyForm(postContainer, newPostId);\n\n        postContainers.each((index, container) => {\n            incrementTotalReplyCount($(container));\n        });\n    });\n};\n\n/**\n * Initialise the javascript for the discussion in nested v2 display mode.\n *\n * @param {Object} root jQuery element for the discussion container\n * @param {Object} context Additional render context for the in page reply template\n */\nexport const init = (root, context) => {\n    // Build the showInPageReplyForm function with the additional render context.\n    showInPageReplyForm = buildShowInPageReplyFormFunction(context);\n    // Add discussion event listeners.\n    registerEventListeners(root);\n    // Initialise default discussion javascript (keyboard nav etc).\n    Discussion.init(root);\n    // Add in page reply javascript.\n    InPageReply.init(root);\n\n    // Initialise the settings menu javascript.\n    const discussionToolsContainer = root.find(Selectors.discussion.tools);\n    LockToggle.init(discussionToolsContainer, false);\n    FavouriteToggle.init(discussionToolsContainer, false, (toggleElement, response) => {\n        const newTargetState = response.userstate.favourited ? 0 : 1;\n        return toggleElement.data('targetstate', newTargetState);\n    });\n    Pin.init(discussionToolsContainer, false, (toggleElement, response) => {\n        const newTargetState = response.pinned ? 0 : 1;\n        return toggleElement.data('targetstate', newTargetState);\n    });\n    Subscribe.init(discussionToolsContainer, false, (toggleElement, response) => {\n        const newTargetState = response.userstate.subscribed ? 0 : 1;\n        toggleElement.data('targetstate', newTargetState);\n    });\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","obj","__esModule","default","_jquery","_auto_rows","_custom_interaction_events","FormChangeChecker","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_notification","_templates","_discussion","_inpage_reply","_lock_toggle","_favourite_toggle","_pin_toggle","_selectors","_subscription_toggle","getPostContainer","element","closest","Selectors","post","getPostContentContainer","postContainer","children","not","repliesContainer","find","forumCoreContent","getInPageReplyContainer","filter","inpageReplyContainer","getInPageReplyForm","inpageReplyContent","getInPageReplyCreateButton","inpageReplyCreateButton","getRepliesVisibilityToggleContainer","repliesVisibilityToggleContainer","getRepliesContainer","hasReplies","length","getShowRepliesButton","replyVisibilityToggleContainer","showReplies","getHideRepliesButton","hideReplies","postIdToSee","arguments","undefined","showButton","hideButton","addClass","removeClass","slideDown","duration","queue","complete","postContainerToSee","id","scrollIntoView","getPostContainerById","css","fadeIn","slideUp","fadeOut","showInPageReplyForm","hideInPageReplyForm","inPageReplyForm","inPageReplyCreateButton","is","repliesVisible","hasInPageReplyForm","inPageReplyContainer","renderInPageReplyTemplate","additionalTemplateContext","button","postContentContainer","currentSubject","forumSubject","text","currentAuthorName","authorName","context","postid","data","reply_url","attr","sesskey","M","cfg","parentsubject","parentauthorname","canreplyprivately","postformat","InPageReply","CONTENT_FORMATS","MOODLE","Templates","render","registerEventListeners","root","CustomEvents","define","events","activate","AutoRows","init","on","originalEvent","preventDefault","$","currentTarget","inpageReplyCancelButton","target","EVENTS","POST_CREATED","inpageSubmitBtn","newPostId","postContainers","parents","each","index","container","replyCount","currentCount","parseInt","innerText","incrementTotalReplyCount","_exports","async","html","appendNodeContents","Notification","exception","watchForm","querySelector","focus","Discussion","discussionToolsContainer","discussion","tools","LockToggle","FavouriteToggle","toggleElement","response","newTargetState","userstate","favourited","Pin","pinned","Subscribe","subscribed"],"mappings":"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"}