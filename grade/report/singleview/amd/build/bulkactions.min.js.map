{"version":3,"file":"bulkactions.min.js","sources":["../src/bulkactions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module for bulk actions.\n *\n * @module      gradereport_singleview/bulkactions\n * @copyright   2022 Ilya Tregubov <ilya@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Pending from 'core/pending';\nimport CustomEvents from \"core/custom_interaction_events\";\nimport ModalSaveCancel from 'core/modal_save_cancel';\nimport Templates from 'core/templates';\nimport ModalEvents from 'core/modal_events';\nimport * as Str from 'core/str';\nimport Notification from 'core/notification';\nimport selectors from 'gradereport_singleview/selectors';\n\n/**\n * Initialize module.\n */\nexport const init = () => {\n    const pendingPromise = new Pending();\n    registerListenerEvents();\n    pendingPromise.resolve();\n};\n\n/**\n * Register bulk actions related event listeners.\n *\n * @method registerListenerEvents\n */\nconst registerListenerEvents = () => {\n    const events = [\n        'click',\n        CustomEvents.events.activate,\n        CustomEvents.events.keyboardActivate\n    ];\n    CustomEvents.define(document, events);\n\n    // Register events.\n    events.forEach((event) => {\n        document.addEventListener(event, async(e) => {\n            const trigger = e.target.closest(selectors.actions.bulkaction);\n\n            if (!trigger) {\n                return;\n            }\n            if ((trigger.dataset.action === 'overrideallgrades') || (trigger.dataset.action === 'overridenonegrades')) {\n                const override = document.querySelectorAll(selectors.elements.override);\n\n                if (trigger.dataset.action === 'overridenonegrades') {\n                    // Alert for removing all grade overrides on page.\n                    Str.get_strings([\n                        {key: 'removeoverride', component: 'gradereport_singleview'},\n                        {key: 'overridenoneconfirm', component: 'gradereport_singleview'},\n                        {key: 'removeoverridesave', component: 'gradereport_singleview'},\n                        {key: 'cancel', component: 'moodle'},\n                    ])\n                    .then((strings) => {\n                        return Notification.confirm(\n                            strings[0],\n                            strings[1],\n                            strings[2],\n                            strings[3],\n                            () => {\n                                // Uncheck each override checkbox - this will make grade and feedback input fields disabled.\n                                override.forEach((el) => {\n                                    if (el.checked) {\n                                        el.click();\n                                    }\n                                });\n                            });\n                    })\n                    .catch(Notification.exception);\n\n                } else {\n                    // Check each override checkbox - this will make grade and feedback input fields enabled.\n                    override.forEach((el) => {\n                        if (!el.checked) {\n                            el.click();\n                        }\n                    });\n                }\n            } else if ((trigger.dataset.action === 'excludeallgrades') || (trigger.dataset.action === 'excludenonegrades')) {\n                const exclude = document.querySelectorAll(selectors.elements.exclude);\n                const checked = (trigger.dataset.action === 'excludeallgrades');\n                // Uncheck or check each exclude checkbox.\n                exclude.forEach((el) => {\n                    el.checked = checked;\n                });\n            } else if (trigger.dataset.action === 'bulklegend') {\n                // Modal for bulk insert grades.\n                Str.get_strings([\n                    {key: 'bulklegend', component: 'gradereport_singleview'},\n                    {key: 'save', component: 'moodle'},\n                ])\n                .then((strings) => {\n                    return ModalSaveCancel.create({\n                        body: Templates.render('gradereport_singleview/bulkinsert', {\n                            id: 'bulkinsertmodal',\n                            name: 'bulkinsertmodal'\n                        }),\n                        title: strings[0],\n                        buttons: {\n                            save: strings[1],\n                        },\n                        removeOnClose: true,\n                        show: true,\n                    });\n                })\n                .then((modal) => {\n                    modal.getFooter().find(selectors.elements.modalsave).attr('disabled', true);\n\n                    // We need to acknowledge that we understand risks of loosing data.\n                    // Only when acknowledge checkbox is checked we allow selecting insert options.\n                    modal.getRoot().on('change', selectors.elements.warningcheckbox,\n                        (e) => {\n                            e.preventDefault();\n                            if (e.target.checked) {\n                                modal.getRoot().find(selectors.elements.modalformdata).removeClass('dimmed_text');\n                                modal.getRoot().find(selectors.elements.modalradio).removeAttr('disabled');\n                                modal.getRoot().find(selectors.elements.modalinput).removeAttr('disabled');\n\n                                const formRadioData = modal.getRoot().find(selectors.elements.modalradiochecked).val();\n                                // We allow saving grades only when all needed data present on form.\n                                if (formRadioData) {\n                                    modal.getFooter().find(selectors.elements.modalsave).removeAttr('disabled');\n                                }\n                            } else {\n                                modal.getRoot().find(selectors.elements.modalformdata).addClass('dimmed_text');\n                                modal.getRoot().find(selectors.elements.modalradio).attr('disabled', true);\n                                modal.getRoot().find(selectors.elements.modalinput).attr('disabled', true);\n                                modal.getFooter().find(selectors.elements.modalsave).attr('disabled', true);\n                            }\n                        });\n\n                    // We allow saving grades only when all needed data present on form.\n                    modal.getRoot().on('change', selectors.elements.modalradio, (e) => {\n                            e.preventDefault();\n                            modal.getFooter().find(selectors.elements.modalsave).removeAttr('disabled');\n                        });\n\n                    modal.getRoot().on(ModalEvents.save, () => {\n                        // When save button is clicked in modal form we insert data from modal\n                        // into preexisted hidden bulk insert form and Save button for table form.\n                        document.querySelector(selectors.elements.enablebulkinsert).checked = true;\n                        const formRadioData = modal.getRoot().find(selectors.elements.modalradiochecked).val();\n                        const $select = document.querySelector(selectors.elements.formradio);\n                        $select.value = formRadioData;\n\n                        const formData = modal.getRoot().find(selectors.elements.modalgrade).val();\n                        document.querySelector(selectors.elements.formgrade).value = formData;\n                        document.querySelector(selectors.elements.formsave).click();\n                    });\n\n                    return modal;\n                })\n                .catch(Notification.exception);\n            }\n        });\n    });\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireDefault","obj","__esModule","default","_pending","_custom_interaction_events","_modal_save_cancel","_templates","_modal_events","Str","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_notification","_selectors","_exports","init","pendingPromise","Pending","registerListenerEvents","resolve","events","CustomEvents","activate","keyboardActivate","define","document","forEach","event","addEventListener","async","trigger","target","closest","selectors","actions","bulkaction","dataset","action","override","querySelectorAll","elements","get_strings","key","component","then","strings","Notification","confirm","el","checked","click","catch","exception","exclude","ModalSaveCancel","create","body","Templates","render","id","name","title","buttons","save","removeOnClose","show","modal","getFooter","find","modalsave","attr","getRoot","on","warningcheckbox","preventDefault","modalformdata","removeClass","modalradio","removeAttr","modalinput","modalradiochecked","val","addClass","ModalEvents","querySelector","enablebulkinsert","formRadioData","formradio","value","formData","modalgrade","formgrade","formsave"],"mappings":"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"}