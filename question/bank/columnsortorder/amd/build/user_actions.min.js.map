{"version":3,"file":"user_actions.min.js","sources":["../src/user_actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for customising the user's view of the question bank\n *\n * @module     qbank_columnsortorder/user_actions\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as actions from 'qbank_columnsortorder/actions';\nimport * as repository from 'qbank_columnsortorder/repository';\nimport {get_string as getString} from 'core/str';\nimport ModalEvents from 'core/modal_events';\nimport ModalSaveCancel from 'core/modal_save_cancel';\nimport Notification from \"core/notification\";\nimport SortableList from 'core/sortable_list';\nimport Templates from \"core/templates\";\n\n\nconst SELECTORS = {\n    uiRoot: '.questionbankwindow',\n    moveAction: '.menu-action[data-action=move]',\n    resizeAction: '.menu-action[data-action=resize]',\n    resizeHandle: '.qbank_columnsortorder-action-handle.resize',\n    handleContainer: '.handle-container',\n    headerContainer: '.header-container',\n    tableColumn: identifier => `td[data-columnid=\"${identifier.replace(/[\"\\\\]/g, '\\\\$&')}\"]`,\n};\n\n/** To track mouse event on a table header */\nlet currentHeader;\n\n/** Current mouse x postion, to track mouse event on a table header */\nlet currentX;\n\n/** Minimum size for the column currently being resized. */\nlet currentMin;\n\n/**\n * Flag to temporarily prevent move and resize handles from being shown or hidden.\n *\n * @type {boolean}\n */\nlet suspendShowHideHandles = false;\n\n/**\n * Add handle containers for move and resize handles.\n *\n * @param {Element} uiRoot The root element of the quesiton bank UI.\n * @return {Promise} Resolved after the containers have been added to each column header.\n */\nconst addHandleContainers = uiRoot => {\n    return new Promise((resolve) => {\n        const headerContainers = uiRoot.querySelectorAll(SELECTORS.headerContainer);\n        Templates.renderForPromise('qbank_columnsortorder/handle_container', {})\n            .then(({html, js}) => {\n                headerContainers.forEach(container => {\n                    Templates.prependNodeContents(container, html, js);\n                });\n                resolve();\n                return headerContainers;\n            }).catch(Notification.exception);\n    });\n};\n\n/**\n * Render move handles in each container.\n *\n * This takes a list of the move actions rendered in each column header, and creates a corresponding drag handle for each.\n *\n * @param {NodeList} moveActions Menu actions for moving columns.\n */\nconst setUpMoveHandles = moveActions => {\n    moveActions.forEach(moveAction => {\n        const header = moveAction.closest('th');\n        header.classList.add('qbank-sortable-column');\n        const handleContainer = header.querySelector(SELECTORS.handleContainer);\n        const context = {\n            action: \"move\",\n            dragtype: \"move\",\n            target: '',\n            title: moveAction.title,\n            pixicon: \"i/dragdrop\",\n            pixcomponent: \"core\",\n            popup: true\n        };\n        return Templates.renderForPromise('qbank_columnsortorder/action_handle', context)\n            .then(({html, js}) => {\n                Templates.prependNodeContents(handleContainer, html, js);\n                return handleContainer;\n            }).catch(Notification.exception);\n    });\n};\n\n/**\n * Serialise the current column sizes.\n *\n * This finds the current width set in each column header's style property, and returns them encoded as a JSON string.\n *\n * @param {Element} uiRoot The root element of the quesiton bank UI.\n * @return {String} JSON array containing a list of objects with column and width properties.\n */\nconst serialiseColumnSizes = (uiRoot) => {\n    const columnSizes = [];\n    const tableHeaders = uiRoot.querySelectorAll('th');\n    tableHeaders.forEach(header => {\n        // Only get the width set via style attribute (set by move action).\n        const width = parseInt(header.style.width);\n        if (!width || isNaN(width)) {\n            return;\n        }\n        columnSizes.push({\n            column: header.dataset.columnid,\n            width: width\n        });\n    });\n    return JSON.stringify(columnSizes);\n};\n\n/**\n * Find the minimum width for a header, based on the width of its contents.\n *\n * This is to simulate `min-width: min-content;`, which doesn't work on Chrome because\n * min-width is ignored width `table-layout: fixed;`.\n *\n * @param {Element} header The table header\n * @return {Number} The minimum width in pixels\n */\nconst getMinWidth = (header) => {\n    const contents = Array.from(header.querySelector('.header-text').children);\n    const contentWidth = contents.reduce((width, contentElement) => width + contentElement.getBoundingClientRect().width, 0);\n    return Math.ceil(contentWidth);\n};\n\n/**\n * Render resize handles in each container.\n *\n * This takes a list of the resize actions rendered in each column header, and creates a corresponding drag handle for each.\n * It also initialises the event handlers for the drag handles and resize modal.\n *\n * @param {Element} uiRoot Question bank UI root element.\n */\nconst setUpResizeHandles = (uiRoot) => {\n    const resizeActions = uiRoot.querySelectorAll(SELECTORS.resizeAction);\n    resizeActions.forEach(resizeAction => {\n        const headerContainer = resizeAction.closest(SELECTORS.headerContainer);\n        const header = resizeAction.closest(actions.SELECTORS.sortableColumn);\n        const minWidth = getMinWidth(header);\n        if (header.offsetWidth < minWidth) {\n            header.style.width = minWidth + 'px';\n        }\n        const handleContainer = headerContainer.querySelector(SELECTORS.handleContainer);\n        const context = {\n            action: \"resize\",\n            target: '',\n            title: resizeAction.title,\n            pixicon: 'i/twoway',\n            pixcomponent: 'core',\n            popup: true\n        };\n        return Templates.renderForPromise('qbank_columnsortorder/action_handle', context)\n            .then(({html, js}) => {\n                Templates.appendNodeContents(handleContainer, html, js);\n                return handleContainer;\n            }).catch(Notification.exception);\n    });\n\n    let moveTracker = false;\n    let currentResizeHandle = null;\n    // Start mouse event on headers.\n    uiRoot.addEventListener('mousedown', e => {\n        currentResizeHandle = e.target.closest(SELECTORS.resizeHandle);\n        // Return if it is not ' resize' button.\n        if (!currentResizeHandle) {\n            return;\n        }\n        // Save current position.\n        currentX = e.pageX;\n        // Find the header.\n        currentHeader = e.target.closest(actions.SELECTORS.sortableColumn);\n        currentMin = getMinWidth(currentHeader);\n        moveTracker = false;\n        suspendShowHideHandles = true;\n    });\n\n    // Resize column as the mouse move.\n    document.addEventListener('mousemove', e => {\n        if (!currentHeader || !currentResizeHandle || currentX === 0) {\n            return;\n        }\n\n        // Prevent text selection as the handle is dragged.\n        document.getSelection().removeAllRanges();\n\n        // Adjust the column width according the amount the handle was dragged.\n        const offset = e.pageX - currentX;\n        currentX = e.pageX;\n        const newWidth = currentHeader.offsetWidth + offset;\n        if (newWidth >= currentMin) {\n            currentHeader.style.width = newWidth + 'px';\n        }\n        moveTracker = true;\n    });\n\n    // Set new size when mouse is up.\n    document.addEventListener('mouseup', () => {\n        if (!currentHeader || !currentResizeHandle || currentX === 0) {\n            return;\n        }\n        if (moveTracker) {\n            // If the mouse moved, we are changing the size by drag, so save the change.\n            repository.setColumnSize(serialiseColumnSizes(uiRoot)).catch(Notification.exception);\n        } else {\n            // If the mouse didn't move, display a modal to change the size using a form.\n            showResizeModal(currentHeader, uiRoot);\n        }\n        currentMin = null;\n        currentHeader = null;\n        currentResizeHandle = null;\n        currentX = 0;\n        moveTracker = false;\n        suspendShowHideHandles = false;\n    });\n};\n\n/**\n * Event handler for resize actions in each column header.\n *\n * This will listen for a click on any resize action, and activate the corresponding resize modal.\n *\n * @param {Element} uiRoot Question bank UI root element.\n */\nconst setUpResizeActions = uiRoot => {\n    uiRoot.addEventListener('click', (e) => {\n        const resizeAction = e.target.closest(SELECTORS.resizeAction);\n        if (resizeAction) {\n            e.preventDefault();\n            const currentHeader = resizeAction.closest('th');\n            showResizeModal(currentHeader, uiRoot);\n        }\n    });\n};\n\n/**\n * Show a modal containing a number input for changing a column width without click-and-drag.\n *\n * @param {Element} currentHeader The header element that is being resized.\n * @param {Element} uiRoot The question bank UI root element.\n * @returns {Promise<void>}\n */\nconst showResizeModal = async(currentHeader, uiRoot) => {\n    const initialWidth = currentHeader.offsetWidth;\n    const minWidth = getMinWidth(currentHeader);\n\n    const modal = await ModalSaveCancel.create({\n        title: getString('resizecolumn', 'qbank_columnsortorder', currentHeader.dataset.name),\n        body: Templates.render('qbank_columnsortorder/resize_modal', {width: initialWidth, min: minWidth}),\n        show: true,\n    });\n    const root = modal.getRoot();\n    root.on(ModalEvents.cancel, () => {\n        currentHeader.style.width = `${initialWidth}px`;\n    });\n    root.on(ModalEvents.save, () => {\n        repository.setColumnSize(serialiseColumnSizes(uiRoot)).catch(Notification.exception);\n    });\n\n    const body = await modal.bodyPromise;\n    const input = body.get(0).querySelector('input');\n\n    input.addEventListener('change', e => {\n        const valid = e.target.checkValidity();\n        e.target.closest('.has-validation').classList.add('was-validated');\n        if (valid) {\n            const newWidth = e.target.value;\n            currentHeader.style.width = `${newWidth}px`;\n        }\n    });\n};\n\n/**\n * Event handler for move actions in each column header.\n *\n * This will listen for a click on any move action, pass the click to the corresponding move handle, causing its modal to be shown.\n *\n * @param {Element} uiRoot Question bank UI root element.\n */\nconst setUpMoveActions = uiRoot => {\n    uiRoot.addEventListener('click', e => {\n        const moveAction = e.target.closest(SELECTORS.moveAction);\n        if (moveAction) {\n            e.preventDefault();\n            const sortableColumn = moveAction.closest(actions.SELECTORS.sortableColumn);\n            const moveHandle = sortableColumn.querySelector(actions.SELECTORS.moveHandler);\n            moveHandle.click();\n        }\n    });\n};\n\n/**\n * Event handler for showing and hiding handles when the mouse is over a column header.\n *\n * Implementing this behaviour using the :hover CSS pseudoclass is not sufficient, as the mouse may move over the neighbouring\n * header while dragging, leading to some odd behaviour. This allows us to suspend the show/hide behaviour while a handle is being\n * dragged, and so keep the active handle visible until the drag is finished.\n *\n * @param {Element} uiRoot Question bank UI root element.\n */\nconst setupShowHideHandles = uiRoot => {\n    let shownHeader = null;\n    let tableHead = uiRoot.querySelector('thead');\n    uiRoot.addEventListener('mouseover', e => {\n        if (suspendShowHideHandles) {\n            return;\n        }\n        const header = e.target.closest(actions.SELECTORS.sortableColumn);\n        if (!header && !shownHeader) {\n            return;\n        }\n        if (!header || header !== shownHeader) {\n            tableHead.querySelector('.show-handles')?.classList.remove('show-handles');\n            shownHeader = header;\n            if (header) {\n                header.classList.add('show-handles');\n            }\n        }\n    });\n};\n\n/**\n * Event handler for sortable list DROP event.\n *\n * Find all table cells corresponding to the column of the dropped header, and move them to the new position.\n *\n * @param {Event} event\n */\nconst reorderColumns = event => {\n    // Current header.\n    const header = event.target;\n    // Find the previous sibling of the header, which will be used when moving columns.\n    const insertAfter = header.previousElementSibling;\n    // Move columns.\n    const uiRoot = document.querySelector(SELECTORS.uiRoot);\n    const columns = uiRoot.querySelectorAll(SELECTORS.tableColumn(header.dataset.columnid));\n    columns.forEach(column => {\n        const row = column.parentElement;\n        if (insertAfter) {\n            // Find the column to insert after.\n            const insertAfterColumn = row.querySelector(SELECTORS.tableColumn(insertAfter.dataset.columnid));\n            // Insert the column.\n            insertAfterColumn.after(column);\n        } else {\n            // Insert as the first child (first column in the table).\n            row.insertBefore(column, row.firstChild);\n        }\n    });\n};\n\n/**\n * Initialize module\n *\n * Add containers for the drag handles to each column header, then render handles, enable show/hide behaviour, set up drag/drop\n * column sorting, then enable the move and resize modals to be triggered from menu actions.\n */\nexport const init = async() => {\n    const uiRoot = document.getElementById('questionscontainer');\n    await addHandleContainers(uiRoot);\n    setUpMoveHandles(uiRoot.querySelectorAll(SELECTORS.moveAction));\n    setUpResizeHandles(uiRoot);\n    setupShowHideHandles(uiRoot);\n    const sortableColumns = actions.setupSortableLists(uiRoot.querySelector(actions.SELECTORS.columnList));\n    sortableColumns.on(SortableList.EVENTS.DROP, reorderColumns);\n    sortableColumns.on(SortableList.EVENTS.DRAGSTART, () => {\n        suspendShowHideHandles = true;\n    });\n    sortableColumns.on(SortableList.EVENTS.DRAGEND, () => {\n        suspendShowHideHandles = false;\n    });\n    setUpMoveActions(uiRoot);\n    setUpResizeActions(uiRoot);\n    actions.setupActionButtons(uiRoot);\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","actions","repository","_modal_events","_modal_save_cancel","_notification","_sortable_list","_templates","SELECTORS","identifier","replace","currentHeader","currentX","currentMin","suspendShowHideHandles","serialiseColumnSizes","uiRoot","columnSizes","querySelectorAll","forEach","header","width","parseInt","style","isNaN","push","column","dataset","columnid","JSON","stringify","getMinWidth","contentWidth","Array","from","querySelector","children","reduce","contentElement","getBoundingClientRect","Math","ceil","showResizeModal","async","initialWidth","offsetWidth","minWidth","modal","ModalSaveCancel","create","title","getString","get_string","name","body","Templates","render","min","show","root","getRoot","on","ModalEvents","cancel","save","setColumnSize","catch","Notification","exception","bodyPromise","addEventListener","valid","target","checkValidity","closest","classList","add","newWidth","value","reorderColumns","event","insertAfter","previousElementSibling","document","row","parentElement","after","insertBefore","firstChild","_exports","init","getElementById","Promise","resolve","headerContainers","renderForPromise","then","_ref","html","js","container","prependNodeContents","addHandleContainers","moveAction","handleContainer","context","action","dragtype","pixicon","pixcomponent","popup","_ref2","resizeAction","headerContainer","sortableColumn","_ref3","appendNodeContents","moveTracker","currentResizeHandle","pageX","getSelection","removeAllRanges","offset","setUpResizeHandles","shownHeader","tableHead","_tableHead$querySelec","remove","setupShowHideHandles","sortableColumns","setupSortableLists","columnList","SortableList","EVENTS","DROP","DRAGSTART","DRAGEND","preventDefault","moveHandler","click","setUpMoveActions","setUpResizeActions","setupActionButtons"],"mappings":"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"}