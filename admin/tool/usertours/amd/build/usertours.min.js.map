{"version":3,"file":"usertours.min.js","sources":["../src/usertours.js"],"sourcesContent":["/**\n * User tour control library.\n *\n * @module     tool_usertours/usertours\n * @copyright  2016 Andrew Nicols <andrew@nicols.co.uk>\n */\nimport BootstrapTour from './tour';\nimport Templates from 'core/templates';\nimport log from 'core/log';\nimport notification from 'core/notification';\nimport * as tourRepository from './repository';\nimport Pending from 'core/pending';\nimport {eventTypes} from './events';\n\nlet currentTour = null;\nlet tourId = null;\nlet restartTourAndKeepProgress = false;\nlet currentStepNo = null;\n\n/**\n * Find the first matching tour.\n *\n * @param {object[]} tourDetails\n * @param {object[]} filters\n * @returns {null|object}\n */\nconst findMatchingTour = (tourDetails, filters) => {\n    return tourDetails.find(tour => filters.some(filter => {\n        if (filter && filter.filterMatches) {\n            return filter.filterMatches(tour);\n        }\n\n        return true;\n    }));\n};\n\n/**\n * Initialise the user tour for the current page.\n *\n * @method  init\n * @param   {Array}    tourDetails      The matching tours for this page.\n * @param   {Array}    filters          The names of all client side filters.\n */\nexport const init = async(tourDetails, filters) => {\n    const requirements = [];\n    filters.forEach(filter => {\n        requirements.push(import(`tool_usertours/filter_${filter}`));\n    });\n\n    const filterPlugins = await Promise.all(requirements);\n\n    const matchingTour = findMatchingTour(tourDetails, filterPlugins);\n    if (!matchingTour) {\n        return;\n    }\n\n    // Only one tour per page is allowed.\n    tourId = matchingTour.tourId;\n\n    let startTour = matchingTour.startTour;\n    if (typeof startTour === 'undefined') {\n        startTour = true;\n    }\n\n    if (startTour) {\n        // Fetch the tour configuration.\n        fetchTour(tourId);\n    }\n\n    addResetLink();\n\n    // Watch for the reset link.\n    document.querySelector('body').addEventListener('click', e => {\n        const resetLink = e.target.closest('#resetpagetour');\n        if (resetLink) {\n            e.preventDefault();\n            resetTourState(tourId);\n        }\n    });\n\n    // Watch for the resize event.\n    window.addEventListener(\"resize\", () => {\n        // Only listen for the running tour.\n        if (currentTour && currentTour.tourRunning) {\n            clearTimeout(window.resizedFinished);\n            window.resizedFinished = setTimeout(() => {\n                // Wait until the resize event has finished.\n                currentStepNo = currentTour.getCurrentStepNumber();\n                restartTourAndKeepProgress = true;\n                resetTourState(tourId);\n            }, 250);\n        }\n    });\n};\n\n/**\n * Fetch the configuration specified tour, and start the tour when it has been fetched.\n *\n * @method  fetchTour\n * @param   {Number}    tourId      The ID of the tour to start.\n */\nconst fetchTour = async tourId => {\n    const pendingPromise = new Pending(`admin_usertour_fetchTour:${tourId}`);\n\n    try {\n        // If we don't have any tour config (because it doesn't need showing for the current user), return early.\n        const response = await tourRepository.fetchTour(tourId);\n        if (response.hasOwnProperty('tourconfig')) {\n            const {html} = await Templates.renderForPromise('tool_usertours/tourstep', response.tourconfig);\n            startBootstrapTour(tourId, html, response.tourconfig);\n        }\n        pendingPromise.resolve();\n    } catch (error) {\n        pendingPromise.resolve();\n        notification.exception(error);\n    }\n};\n\nconst getPreferredResetLocation = () => {\n    let location = document.querySelector('.tool_usertours-resettourcontainer');\n    if (location) {\n        return location;\n    }\n\n    location = document.querySelector('.logininfo');\n    if (location) {\n        return location;\n    }\n\n    location = document.querySelector('footer');\n    if (location) {\n        return location;\n    }\n\n    return document.body;\n};\n\n/**\n * Add a reset link to the page.\n *\n * @method  addResetLink\n */\nconst addResetLink = () => {\n    const pendingPromise = new Pending('admin_usertour_addResetLink');\n\n    Templates.render('tool_usertours/resettour', {})\n    .then(function(html, js) {\n        // Append the link to the most suitable place on the page with fallback to legacy selectors and finally the body if\n        // there is no better place.\n        Templates.appendNodeContents(getPreferredResetLocation(), html, js);\n\n        return;\n    })\n    .catch()\n    .then(pendingPromise.resolve)\n    .catch();\n};\n\n/**\n * Start the specified tour.\n *\n * @method  startBootstrapTour\n * @param   {Number}    tourId      The ID of the tour to start.\n * @param   {String}    template    The template to use.\n * @param   {Object}    tourConfig  The tour configuration.\n * @return  {Object}\n */\nconst startBootstrapTour = (tourId, template, tourConfig) => {\n    if (currentTour && currentTour.tourRunning) {\n        // End the current tour.\n        currentTour.endTour();\n        currentTour = null;\n    }\n\n    document.addEventListener(eventTypes.tourEnded, markTourComplete);\n    document.addEventListener(eventTypes.stepRenderer, markStepShown);\n\n    // Sort out the tour name.\n    tourConfig.tourName = tourConfig.name;\n    delete tourConfig.name;\n\n    // Add the template to the configuration.\n    // This enables translations of the buttons.\n    tourConfig.template = template;\n\n    tourConfig.steps = tourConfig.steps.map(function(step) {\n        if (typeof step.element !== 'undefined') {\n            step.target = step.element;\n            delete step.element;\n        }\n\n        if (typeof step.reflex !== 'undefined') {\n            step.moveOnClick = !!step.reflex;\n            delete step.reflex;\n        }\n\n        if (typeof step.content !== 'undefined') {\n            step.body = step.content;\n            delete step.content;\n        }\n\n        return step;\n    });\n\n    currentTour = new BootstrapTour(tourConfig);\n    let startAt = 0;\n    if (restartTourAndKeepProgress && currentStepNo) {\n        startAt = currentStepNo;\n        restartTourAndKeepProgress = false;\n        currentStepNo = null;\n    }\n    return currentTour.startTour(startAt);\n};\n\n/**\n * Mark the specified step as being shownd by the user.\n *\n * @method  markStepShown\n * @param   {Event} e\n */\nconst markStepShown = e => {\n    const tour = e.detail.tour;\n    const stepConfig = tour.getStepConfig(tour.getCurrentStepNumber());\n    tourRepository.markStepShown(\n        stepConfig.stepid,\n        tourId,\n        tour.getCurrentStepNumber()\n    ).catch(log.error);\n};\n\n/**\n * Mark the specified tour as being completed by the user.\n *\n * @method  markTourComplete\n * @param   {Event} e\n * @listens tool_usertours/stepRendered\n */\nconst markTourComplete = e => {\n    document.removeEventListener(eventTypes.tourEnded, markTourComplete);\n    document.removeEventListener(eventTypes.stepRenderer, markStepShown);\n\n    const tour = e.detail.tour;\n    const stepConfig = tour.getStepConfig(tour.getCurrentStepNumber());\n    tourRepository.markTourComplete(\n        stepConfig.stepid,\n        tourId,\n        tour.getCurrentStepNumber()\n    ).catch(log.error);\n};\n\n/**\n * Reset the state, and restart the the tour on the current page.\n *\n * @method  resetTourState\n * @param   {Number}    tourId      The ID of the tour to start.\n * @returns {Promise}\n */\nexport const resetTourState = tourId => tourRepository.resetTourState(tourId)\n.then(response => {\n    if (response.startTour) {\n        fetchTour(response.startTour);\n    }\n    return;\n}).catch(notification.exception);\n"],"names":["_tour","_interopRequireDefault","_templates","_log","_notification","tourRepository","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_pending","_systemImportTransformerGlobalIdentifier","window","self","global","WeakMap","obj","currentTour","tourId","restartTourAndKeepProgress","currentStepNo","_exports","init","async","tourDetails","filters","requirements","forEach","filter","push","define","amd","Promise","resolve","reject","require","module","exports","component","loader","matchingTour","findMatchingTour","find","tour","some","filterMatches","all","startTour","fetchTour","addResetLink","document","querySelector","addEventListener","target","closest","preventDefault","resetTourState","tourRunning","clearTimeout","resizedFinished","setTimeout","getCurrentStepNumber","pendingPromise","Pending","response","html","Templates","renderForPromise","tourconfig","startBootstrapTour","error","notification","exception","render","then","js","appendNodeContents","getPreferredResetLocation","location","body","catch","template","tourConfig","endTour","eventTypes","tourEnded","markTourComplete","stepRenderer","markStepShown","tourName","name","steps","map","step","element","reflex","moveOnClick","content","BootstrapTour","startAt","detail","stepConfig","getStepConfig","stepid","log","removeEventListener"],"mappings":"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"}