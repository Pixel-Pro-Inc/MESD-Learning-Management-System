{"version":3,"file":"plugin_management_table.min.js","sources":["../src/plugin_management_table.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {refreshTableContent} from 'core_table/dynamic';\nimport * as Selectors from 'core_table/local/dynamic/selectors';\nimport {call as fetchMany} from 'core/ajax';\nimport Pending from 'core/pending';\nimport {fetchNotifications} from 'core/notification';\n\nlet watching = false;\n\nexport default class {\n    /**\n     * @property {function[]} clickHandlers a list of handlers to call on click.\n     */\n    clickHandlers = [];\n\n    constructor() {\n        this.addClickHandler(this.handleStateToggle);\n        this.addClickHandler(this.handleMoveUpDown);\n        this.registerEventListeners();\n    }\n\n    /**\n     * Initialise an instance of the class.\n     *\n     * This is just a way of making it easier to initialise an instance of the class from PHP.\n     */\n    static init() {\n        if (watching) {\n            return;\n        }\n        watching = true;\n        new this();\n    }\n\n    /**\n     * Add a click handler to the list of handlers.\n     *\n     * @param {Function} handler A handler to call on a click event\n     */\n    addClickHandler(handler) {\n        this.clickHandlers.push(handler.bind(this));\n    }\n\n    /**\n     * Register the event listeners for this instance.\n     */\n    registerEventListeners() {\n        document.addEventListener('click', function(e) {\n            const tableRoot = this.getTableRoot(e);\n\n            if (!tableRoot) {\n                return;\n            }\n\n            this.clickHandlers.forEach((handler) => handler(tableRoot, e));\n        }.bind(this));\n    }\n\n    /**\n     * Get the table root from an event.\n     *\n     * @param {Event} e\n     * @returns {HTMLElement|bool}\n     */\n    getTableRoot(e) {\n        const tableRoot = e.target.closest(Selectors.main.region);\n        if (!tableRoot) {\n            return false;\n        }\n\n        return tableRoot;\n    }\n\n    /**\n     * Set the plugin state (enabled or disabled)\n     *\n     * @param {string} methodname The web service to call\n     * @param {string} plugin The name of the plugin to set the state for\n     * @param {number} state The state to set\n     * @returns {Promise}\n     */\n    setPluginState(methodname, plugin, state) {\n        return fetchMany([{\n            methodname,\n            args: {\n                plugin,\n                state,\n            },\n        }])[0];\n    }\n\n    setPluginOrder(methodname, plugin, direction) {\n        return fetchMany([{\n            methodname,\n            args: {\n                plugin,\n                direction,\n            },\n        }])[0];\n    }\n\n    /**\n     * Handle state toggling.\n     *\n     * @param {HTMLElement} tableRoot\n     * @param {Event} e\n     */\n    async handleStateToggle(tableRoot, e) {\n        const stateToggle = e.target.closest('[data-action=\"togglestate\"][data-toggle-method]');\n        if (stateToggle) {\n            e.preventDefault();\n            const pendingPromise = new Pending('core_table/dynamic:togglestate');\n\n            await this.setPluginState(\n                stateToggle.dataset.toggleMethod,\n                stateToggle.dataset.plugin,\n                stateToggle.dataset.state === '1' ? 0 : 1\n            );\n\n            const [updatedRoot] = await Promise.all([\n                refreshTableContent(tableRoot),\n                fetchNotifications(),\n            ]);\n\n            // Refocus on the link that as pressed in the first place.\n            updatedRoot.querySelector(`[data-action=\"togglestate\"][data-plugin=\"${stateToggle.dataset.plugin}\"]`).focus();\n            pendingPromise.resolve();\n        }\n    }\n\n    async handleMoveUpDown(tableRoot, e) {\n        const actionLink = e.target.closest('[data-action=\"move\"][data-method][data-direction]');\n        if (!actionLink) {\n            return;\n        }\n\n        e.preventDefault();\n\n        const pendingPromise = new Pending('core_table/dynamic:processAction');\n\n        await this.setPluginOrder(\n            actionLink.dataset.method,\n            actionLink.dataset.plugin,\n            actionLink.dataset.direction === 'up' ? -1 : 1,\n        );\n\n        const [updatedRoot] = await Promise.all([\n            refreshTableContent(tableRoot),\n            fetchNotifications(),\n        ]);\n\n        // Refocus on the link that as pressed in the first place.\n        const exactMatch = updatedRoot.querySelector(\n            `[data-action=\"move\"][data-plugin=\"${actionLink.dataset.plugin}\"][data-direction=\"${actionLink.dataset.direction}\"]`\n        );\n        if (exactMatch) {\n            exactMatch.focus();\n        } else {\n            // The move link is not present anymore, so we need to focus on the other one.\n            updatedRoot.querySelector(`[data-action=\"move\"][data-plugin=\"${actionLink.dataset.plugin}\"]`)?.focus();\n        }\n\n        pendingPromise.resolve();\n    }\n}\n"],"names":["obj","_getRequireWildcardCache","e","WeakMap","r","t","Selectors","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_pending","watching","_exports","clickHandlers","constructor","this","addClickHandler","handleStateToggle","handleMoveUpDown","registerEventListeners","init","handler","push","bind","document","addEventListener","tableRoot","getTableRoot","forEach","target","closest","main","region","setPluginState","methodname","plugin","state","fetchMany","args","setPluginOrder","direction","stateToggle","preventDefault","pendingPromise","Pending","dataset","toggleMethod","updatedRoot","Promise","all","refreshTableContent","fetchNotifications","querySelector","focus","resolve","actionLink","method","exactMatch","_updatedRoot$querySel"],"mappings":"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"}