{"version":3,"file":"manage_subscriptions.min.js","sources":["../src/manage_subscriptions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A module to handle Delete/Update operations of the manage subscription page.\n *\n * @module core_calendar/manage_subscriptions\n * @copyright 2021 Huong Nguyen <huongnv13@gmail.com>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since 4.0\n */\n\nimport * as CalendarSelectors from 'core_calendar/selectors';\nimport * as CalendarRepository from 'core_calendar/repository';\nimport ModalSaveCancel from 'core/modal_save_cancel';\nimport * as ModalEvents from 'core/modal_events';\nimport {exception as displayException, addNotification, fetchNotifications} from 'core/notification';\nimport Prefetch from 'core/prefetch';\nimport {getString} from 'core/str';\nimport {eventTypes} from 'core/local/inplace_editable/events';\n\n/**\n * Get subscription id for given element.\n *\n * @param {HTMLElement} element update/delete link\n * @return {Number}\n */\nconst getSubscriptionId = element => {\n    return parseInt(element.closest('tr').dataset.subid);\n};\n\n/**\n * Get subscription name for given element.\n *\n * @param {HTMLElement} element update/delete link\n * @return {String}\n */\nconst getSubscriptionName = element => {\n    return element.closest('tr').dataset.subname;\n};\n\n/**\n * Get subscription table row for subscription id.\n *\n * @param {string} subscriptionId Subscription id\n * @return {Element}\n */\nconst getSubscriptionRow = subscriptionId => {\n    return document.querySelector(`tr[data-subid=\"${subscriptionId}\"]`);\n};\n\n/**\n * Create modal.\n *\n * @param {HTMLElement} element\n * @param {string} messageCode Message code.\n * @return {promise} Promise for modal\n */\nconst createModal = (element, messageCode) => {\n    const subscriptionName = getSubscriptionName(element);\n    return ModalSaveCancel.create({\n        title: getString('confirmation', 'admin'),\n        body: getString(messageCode, 'calendar', subscriptionName),\n        buttons: {\n            save: getString('yes')\n        },\n    }).then(modal => {\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            element.focus();\n        });\n        modal.show();\n        return modal;\n    });\n};\n\n/**\n * Response handler for delete action.\n *\n * @param {HTMLElement} element\n * @param {Object} data\n * @return {Promise}\n */\nconst responseHandlerForDelete = async(element, data) => {\n    const subscriptionName = getSubscriptionName(element);\n    const message = data.status ? await getString('subscriptionremoved', 'calendar', subscriptionName) : data.warnings[0].message;\n    const type = data.status ? 'info' : 'error';\n    return addNotification({message, type});\n};\n\n/**\n * Register events for update/delete links.\n */\nconst registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const deleteAction = e.target.closest(CalendarSelectors.actions.deleteSubscription);\n        if (deleteAction) {\n            e.preventDefault();\n            const modalPromise = createModal(deleteAction, 'confirmsubscriptiondelete');\n            modalPromise.then(modal => {\n                modal.getRoot().on(ModalEvents.save, () => {\n                    const subscriptionId = getSubscriptionId(deleteAction);\n                    CalendarRepository.deleteSubscription(subscriptionId).then(data => {\n                        const response = responseHandlerForDelete(deleteAction, data);\n                        return response.then(() => {\n                            const subscriptionRow = getSubscriptionRow(subscriptionId);\n                            return subscriptionRow.remove();\n                        });\n                    }).catch(displayException);\n                });\n\n                return modal;\n            }).catch(displayException);\n        }\n    });\n\n    document.addEventListener(eventTypes.elementUpdated, e => {\n        const inplaceEditable = e.target;\n        if (inplaceEditable.getAttribute('data-component') == 'core_calendar') {\n            fetchNotifications();\n        }\n    });\n};\n\n/**\n * Initialises.\n */\nexport const init = () => {\n    Prefetch.prefetchStrings('moodle', ['yes']);\n    Prefetch.prefetchStrings('core_admin', ['confirmation']);\n    Prefetch.prefetchStrings('core_calendar', ['confirmsubscriptiondelete', 'subscriptionremoved']);\n    registerEventListeners();\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","CalendarSelectors","CalendarRepository","_modal_save_cancel","ModalEvents","_prefetch","getSubscriptionName","element","closest","dataset","subname","registerEventListeners","document","addEventListener","deleteAction","target","actions","deleteSubscription","preventDefault","createModal","messageCode","subscriptionName","ModalSaveCancel","create","title","getString","body","buttons","save","then","modal","getRoot","on","hidden","focus","show","subscriptionId","parseInt","subid","data","response","async","message","status","warnings","type","addNotification","responseHandlerForDelete","subscriptionRow","querySelector","getSubscriptionRow","remove","catch","displayException","eventTypes","elementUpdated","getAttribute","fetchNotifications","_exports","init","Prefetch","prefetchStrings"],"mappings":"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"}