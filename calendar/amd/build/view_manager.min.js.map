{"version":3,"file":"view_manager.min.js","sources":["../src/view_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler calendar view changes.\n *\n * @module     core_calendar/view_manager\n * @copyright  2017 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport * as CalendarRepository from 'core_calendar/repository';\nimport CalendarEvents from 'core_calendar/events';\nimport * as CalendarSelectors from 'core_calendar/selectors';\nimport ModalEvents from 'core/modal_events';\nimport SummaryModal from 'core_calendar/summary_modal';\nimport CustomEvents from 'core/custom_interaction_events';\nimport {getString} from 'core/str';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\n\n/**\n * Limit number of events per day\n *\n */\nconst LIMIT_DAY_EVENTS = 5;\n\n/**\n * Hide day events if more than 5.\n *\n */\nexport const foldDayEvents = () => {\n    const root = $(CalendarSelectors.elements.monthDetailed);\n    const days = root.find(CalendarSelectors.day);\n    if (days.length === 0) {\n        return;\n    }\n    days.each(function() {\n        const dayContainer = $(this);\n        const eventsSelector = `${CalendarSelectors.elements.dateContent} ul li[data-event-eventtype]`;\n        const filteredEventsSelector = `${CalendarSelectors.elements.dateContent} ul li[data-event-filtered=\"true\"]`;\n        const moreEventsSelector = `${CalendarSelectors.elements.dateContent} [data-action=\"view-more-events\"]`;\n        const events = dayContainer.find(eventsSelector);\n        if (events.length === 0) {\n            return;\n        }\n\n        const filteredEvents = dayContainer.find(filteredEventsSelector);\n        const numberOfFiltered = filteredEvents.length;\n        const numberOfEvents = events.length - numberOfFiltered;\n\n        let count = 1;\n        events.each(function() {\n            const event = $(this);\n            const isNotFiltered = event.attr('data-event-filtered') !== 'true';\n            const offset = (numberOfEvents === LIMIT_DAY_EVENTS) ? 0 : 1;\n            if (isNotFiltered) {\n                if (count > LIMIT_DAY_EVENTS - offset) {\n                    event.attr('data-event-folded', 'true');\n                    event.hide();\n                } else {\n                    event.attr('data-event-folded', 'false');\n                    event.show();\n                    count++;\n                }\n            } else {\n                // It's being filtered out.\n                event.attr('data-event-folded', 'false');\n            }\n        });\n\n        const moreEventsLink = dayContainer.find(moreEventsSelector);\n        if (numberOfEvents > LIMIT_DAY_EVENTS) {\n            const numberOfHiddenEvents = numberOfEvents - LIMIT_DAY_EVENTS + 1;\n            moreEventsLink.show();\n            getString('moreevents', 'calendar', numberOfHiddenEvents).then(str => {\n                const link = moreEventsLink.find('strong a');\n                moreEventsLink.attr('data-event-folded', 'false');\n                link.text(str);\n                return str;\n            }).catch(Notification.exception);\n        } else {\n            moreEventsLink.hide();\n        }\n    });\n};\n\n/**\n * Register and handle month calendar events.\n *\n * @param {string} pendingId pending id.\n */\nexport const registerEventListenersForMonthDetailed = (pendingId) => {\n    const events = `${CalendarEvents.viewUpdated}`;\n    $('body').on(events, function(e) {\n        foldDayEvents(e);\n    });\n    foldDayEvents();\n    $('body').on(CalendarEvents.filterChanged, function(e, data) {\n        const root = $(CalendarSelectors.elements.monthDetailed);\n        const pending = new Pending(pendingId);\n        const target = root.find(CalendarSelectors.eventType[data.type]);\n        const transitionPromise = $.Deferred();\n        if (data.hidden) {\n            transitionPromise.then(function() {\n                target.attr('data-event-filtered', 'true');\n                return target.hide().promise();\n            }).fail();\n        } else {\n            transitionPromise.then(function() {\n                target.attr('data-event-filtered', 'false');\n                return target.show().promise();\n            }).fail();\n        }\n\n        transitionPromise.then(function() {\n            foldDayEvents();\n            return;\n        })\n        .always(pending.resolve)\n        .fail();\n\n        transitionPromise.resolve();\n    });\n};\n\n/**\n * Register event listeners for the module.\n *\n * @param {object} root The root element.\n */\nconst registerEventListeners = (root) => {\n    root = $(root);\n\n    // Bind click events to event links.\n    root.on('click', CalendarSelectors.links.eventLink, (e) => {\n        const target = e.target;\n        let eventLink = null;\n        let eventId = null;\n        const pendingPromise = new Pending('core_calendar/view_manager:eventLink:click');\n\n        if (target.matches(CalendarSelectors.actions.viewEvent)) {\n            eventLink = target;\n        } else {\n            eventLink = target.closest(CalendarSelectors.actions.viewEvent);\n        }\n\n        if (eventLink) {\n            eventId = eventLink.dataset.eventId;\n        } else {\n            eventId = target.querySelector(CalendarSelectors.actions.viewEvent).dataset.eventId;\n        }\n\n        if (eventId) {\n            // A link was found. Show the modal.\n\n            e.preventDefault();\n            // We've handled the event so stop it from bubbling\n            // and causing the day click handler to fire.\n            e.stopPropagation();\n\n            renderEventSummaryModal(eventId)\n            .then(pendingPromise.resolve)\n            .catch();\n        } else {\n            pendingPromise.resolve();\n        }\n    });\n\n    root.on('click', CalendarSelectors.links.navLink, (e) => {\n        const wrapper = root.find(CalendarSelectors.wrapper);\n        const view = wrapper.data('view');\n        const courseId = wrapper.data('courseid');\n        const categoryId = wrapper.data('categoryid');\n        const link = e.currentTarget;\n\n        if (view === 'month' || view === 'monthblock') {\n            changeMonth(root, link.href, link.dataset.year, link.dataset.month, courseId, categoryId, link.dataset.day);\n            e.preventDefault();\n        } else if (view === 'day') {\n            changeDay(root, link.href, link.dataset.year, link.dataset.month, link.dataset.day, courseId, categoryId);\n            e.preventDefault();\n        }\n    });\n\n    const viewSelector = root.find(CalendarSelectors.viewSelector);\n    CustomEvents.define(viewSelector, [CustomEvents.events.activate]);\n    viewSelector.on(\n        CustomEvents.events.activate,\n        (e) => {\n            e.preventDefault();\n\n            const option = e.target;\n            if (option.classList.contains('active')) {\n                return;\n            }\n\n            const view = option.dataset.view,\n                year = option.dataset.year,\n                month = option.dataset.month,\n                day = option.dataset.day,\n                courseId = option.dataset.courseid,\n                categoryId = option.dataset.categoryid;\n\n            if (view == 'month') {\n                refreshMonthContent(root, year, month, courseId, categoryId, root, 'core_calendar/calendar_month', day)\n                    .then(() => {\n                        updateUrl('?view=month');\n                    }).fail(Notification.exception);\n            } else if (view == 'day') {\n                refreshDayContent(root, year, month, day, courseId, categoryId, root, 'core_calendar/calendar_day')\n                    .then(() => {\n                        updateUrl('?view=day');\n                    }).fail(Notification.exception);\n            } else if (view == 'upcoming') {\n                reloadCurrentUpcoming(root, courseId, categoryId, root, 'core_calendar/calendar_upcoming')\n                    .then(() => {\n                        updateUrl('?view=upcoming');\n                    }).fail(Notification.exception);\n            }\n        }\n    );\n};\n\n/**\n * Refresh the month content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const refreshMonthContent = (root, year, month, courseId, categoryId, target = null, template = '', day = 1) => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, courseId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    const mini = root.data('mini');\n    const viewMode = target.data('view');\n    return CalendarRepository.getCalendarMonthData(year, month, courseId, categoryId, includenavigation, mini, day, viewMode)\n        .then(context => {\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, courseId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The container element\n * @param {string} url The calendar url to be shown\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const changeMonth = (root, url, year, month, courseId, categoryId, day = 1) => {\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                updateUrl(url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.monthChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentMonth = (root, courseId = 0, categoryId = 0) => {\n    const year = root.find(CalendarSelectors.wrapper).data('year');\n    const month = root.find(CalendarSelectors.wrapper).data('month');\n    const day = root.find(CalendarSelectors.wrapper).data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day).\n        then((...args) => {\n            $('body').trigger(CalendarEvents.courseChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n\n/**\n * Refresh the day content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} day Day\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n *\n * @return {promise}\n */\nexport const refreshDayContent = (root, year, month, day, courseId, categoryId, target = null, template = '') => {\n    startLoading(root);\n\n    if (!target || target.length == 0){\n        target = root.find(CalendarSelectors.wrapper);\n    }\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    return CalendarRepository.getCalendarDayData(year, month, day, courseId, categoryId, includenavigation)\n        .then((context) => {\n            context.viewingday = true;\n            context.showviewselector = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Reload the current day view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentDay = (root, courseId = 0, categoryId = 0) => {\n    const wrapper = root.find(CalendarSelectors.wrapper);\n    const year = wrapper.data('year');\n    const month = wrapper.data('month');\n    const day = wrapper.data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshDayContent(root, year, month, day, courseId, categoryId);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The root element.\n * @param {String} url The calendar url to be shown\n * @param {Number} year Year\n * @param {Number} month Month\n * @param {Number} day Day\n * @param {Number} courseId The id of the course whose events are shown\n * @param {Number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const changeDay = (root, url, year, month, day, courseId, categoryId) => {\n    return refreshDayContent(root, year, month, day, courseId, categoryId)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                updateUrl(url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.dayChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Update calendar URL.\n *\n * @param {String} url The calendar url to be updated.\n */\nexport const updateUrl = (url) => {\n    const viewingFullCalendar = document.getElementById(CalendarSelectors.fullCalendarView);\n\n    // We want to update the url only if the user is viewing the full calendar.\n    if (viewingFullCalendar) {\n        window.history.pushState({}, '', url);\n    }\n};\n\n/**\n * Set the element state to loading.\n *\n * @param {object} root The container element\n * @method startLoading\n */\nconst startLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.removeClass('hidden');\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @param {object} root The container element\n * @method stopLoading\n */\nconst stopLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.addClass('hidden');\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @return {promise}\n */\nexport const reloadCurrentUpcoming = (root, courseId = 0, categoryId = 0, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return CalendarRepository.getCalendarUpcomingData(courseId, categoryId)\n        .then((context) => {\n            context.viewingupcoming = true;\n            context.showviewselector = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(function() {\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Get the CSS class to apply for the given event type.\n *\n * @param {string} eventType The calendar event type\n * @return {string}\n */\nconst getEventTypeClassFromType = (eventType) => {\n    return 'calendar_event_' + eventType;\n};\n\n/**\n * Render the event summary modal.\n *\n * @param {Number} eventId The calendar event id.\n * @returns {Promise}\n */\nconst renderEventSummaryModal = (eventId) => {\n    const pendingPromise = new Pending('core_calendar/view_manager:renderEventSummaryModal');\n\n    // Calendar repository promise.\n    return CalendarRepository.getEventById(eventId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.event) {\n            throw new Error('Error encountered while trying to fetch calendar event with ID: ' + eventId);\n        }\n\n        return getEventResponse.event;\n    })\n    .then(eventData => {\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: eventData.name,\n            body: Templates.render('core_calendar/event_summary_body', eventData),\n            templateContext: {\n                canedit: eventData.canedit,\n                candelete: eventData.candelete,\n                headerclasses: getEventTypeClassFromType(eventData.normalisedeventtype),\n                isactionevent: eventData.isactionevent,\n                url: eventData.url,\n                action: eventData.action\n            }\n        };\n\n        // Create the modal.\n        return SummaryModal.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\nexport const init = (root, view) => {\n    prefetchStrings('calendar', ['moreevents']);\n    foldDayEvents();\n    registerEventListeners(root, view);\n    const calendarTable = root.find(CalendarSelectors.elements.monthDetailed);\n    if (calendarTable.length) {\n        const pendingId = `month-detailed-${calendarTable.id}-filterChanged`;\n        registerEventListenersForMonthDetailed(calendarTable, pendingId);\n    }\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireDefault","obj","_jquery","_templates","_notification","CalendarRepository","_events","CalendarSelectors","_modal_events","_summary_modal","_custom_interaction_events","_pending","foldDayEvents","days","$","elements","monthDetailed","find","day","length","each","dayContainer","this","eventsSelector","dateContent","filteredEventsSelector","moreEventsSelector","events","numberOfFiltered","numberOfEvents","count","event","attr","hide","show","moreEventsLink","numberOfHiddenEvents","getString","then","str","link","text","catch","Notification","exception","_exports","registerEventListenersForMonthDetailed","pendingId","CalendarEvents","viewUpdated","on","filterChanged","data","root","pending","Pending","target","eventType","type","transitionPromise","Deferred","hidden","promise","fail","always","resolve","refreshMonthContent","year","month","courseId","categoryId","arguments","undefined","template","startLoading","wrapper","M","util","js_pending","join","includenavigation","mini","viewMode","getCalendarMonthData","context","Templates","render","html","js","replaceNode","document","querySelector","dispatchEvent","CustomEvent","js_complete","stopLoading","changeMonth","url","updateUrl","_len","args","Array","_key","trigger","monthChanged","_len2","_key2","reloadCurrentMonth","courseChanged","_len3","_key3","refreshDayContent","getCalendarDayData","viewingday","showviewselector","reloadCurrentDay","changeDay","_len4","_key4","dayChanged","_len5","_key5","getElementById","fullCalendarView","window","history","pushState","containers","loadingIcon","removeClass","addClass","reloadCurrentUpcoming","getCalendarUpcomingData","viewingupcoming","renderEventSummaryModal","eventId","pendingPromise","getEventById","getEventResponse","Error","eventData","modalParams","title","name","body","templateContext","canedit","candelete","headerclasses","normalisedeventtype","isactionevent","action","SummaryModal","create","modal","getRoot","ModalEvents","destroy","init","view","prefetchStrings","links","eventLink","matches","actions","viewEvent","closest","dataset","preventDefault","stopPropagation","navLink","currentTarget","href","viewSelector","CustomEvents","define","activate","option","classList","contains","courseid","categoryid","registerEventListeners","calendarTable","id"],"mappings":"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"}